{"ast":null,"code":"var _jsxFileName = \"/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/src/places/Pages/NewPlace.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useReducer } from \"react\";\nimport Inputs from \"../../shared/Components/FormElements/Input\";\nimport './NewPlace.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n    default:\n      return state;\n  }\n};\nconst NewPlace = props => {\n  _s();\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n  const formSubmitHandler = event => {\n    event.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"place-form\",\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Inputs, {\n      id: \"title\",\n      inputfieldtype: \"input\",\n      label: \"Title\",\n      type: \"text\",\n      errorText: \"Please enter a valid title\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n      id: \"description\",\n      label: \"Description\",\n      type: \"text\",\n      errorText: \"Please enter a valid description\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n      id: \"address\",\n      label: \"Address\",\n      type: \"text\",\n      errorText: \"Please enter a valid description\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Place\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(NewPlace, \"RBg2nwX1TbgATGO2s3AJsIiSCIY=\");\n_c = NewPlace;\nexport default NewPlace;\nvar _c;\n$RefreshReg$(_c, \"NewPlace\");","map":{"version":3,"names":["React","useCallback","useReducer","Inputs","jsxDEV","_jsxDEV","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","NewPlace","props","_s","formState","dispatch","title","description","inputHandler","id","formSubmitHandler","event","preventDefault","className","onSubmit","children","inputfieldtype","label","errorText","onInput","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/src/places/Pages/NewPlace.js"],"sourcesContent":["import React, { useCallback,useReducer } from \"react\";\n\nimport Inputs from \"../../shared/Components/FormElements/Input\";\nimport './NewPlace.css';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nconst NewPlace = props => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n  };\n    return(\n        <form className=\"place-form\" onSubmit={formSubmitHandler}>\n          <Inputs id=\"title\" inputfieldtype=\"input\" label=\"Title\" type=\"text\" errorText=\"Please enter a valid title\" onInput={inputHandler}/>\n          <Inputs id=\"description\" label=\"Description\" type=\"text\" errorText=\"Please enter a valid description\" onInput={inputHandler}/>\n          <Inputs id=\"address\" label=\"Address\" type=\"text\" errorText=\"Please enter a valid description\" onInput={inputHandler}/>\n          <button type=\"submit\">Add Place</button>\n        </form>\n      \n    );\n}\n\nexport default NewPlace;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}