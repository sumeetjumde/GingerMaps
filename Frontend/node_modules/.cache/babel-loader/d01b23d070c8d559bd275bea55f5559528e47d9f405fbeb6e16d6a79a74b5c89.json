{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback, useRef, useEffect } from \"react\";\nexport const useHttpClient = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const activeHttpRequests = useRef([]);\n  const sendRequest = useCallback(async (url, method = \"GET\", body = null, headers = {}) => {\n    setIsLoading(true);\n    const httpAbortCtrl = new AbortController();\n    activeHttpRequests.current.push(httpAbortCtrl);\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers,\n        signal: httpAbortCtrl.signal\n      });\n      const responseData = await response.json();\n      activeHttpRequests.current = activeHttpRequests.current.filter(reqCtrl => reqCtrl !== httpAbortCtrl);\n\n      // This will check all errors if error exist for 400 and 500 it will catch which is not genrally catched.\n      if (!response.ok) {\n        throw new Error(responseData.message);\n      }\n      setIsLoading(false);\n      return responseData;\n    } catch (err) {\n      setError(err.message);\n      setIsLoading(false);\n      throw err;\n    }\n  }, []);\n  const clearError = () => {\n    setError(null);\n  };\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  };\n};\n_s(useHttpClient, \"5LFg9Ro/5iGJ4ehzHD/qJSt5Ojo=\");","map":{"version":3,"names":["useState","useCallback","useRef","useEffect","useHttpClient","_s","isLoading","setIsLoading","error","setError","activeHttpRequests","sendRequest","url","method","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","clearError","forEach","abortCtrl","abort"],"sources":["/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/src/shared/hooks/http-hook.js"],"sourcesContent":["import { useState,useCallback,useRef, useEffect} from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(async (url, method = \"GET\", body = null, headers = {}) => {\n    setIsLoading(true);\n    const httpAbortCtrl = new AbortController();\n    activeHttpRequests.current.push(httpAbortCtrl);\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers,\n        signal:httpAbortCtrl.signal\n      });\n\n      const responseData = await response.json();\n\n      activeHttpRequests.current = activeHttpRequests.current.filter(reqCtrl => reqCtrl !== httpAbortCtrl);\n\n      // This will check all errors if error exist for 400 and 500 it will catch which is not genrally catched.\n      if (!response.ok) {\n        throw new Error(responseData.message);\n      }\n      setIsLoading(false);\n      return responseData;\n    } catch (err) {\n      setError(err.message);\n      setIsLoading(false);\n      throw err;\n    }\n    \n  },[]);\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(()=>{\n    return () => {\n        activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  },[]);\n\n  return {isLoading,error,sendRequest,clearError};\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAACC,WAAW,EAACC,MAAM,EAAEC,SAAS,QAAO,OAAO;AAE7D,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAEpC,MAAMU,kBAAkB,GAAGR,MAAM,CAAC,EAAE,CAAC;EAErC,MAAMS,WAAW,GAAGV,WAAW,CAAC,OAAOW,GAAG,EAAEC,MAAM,GAAG,KAAK,EAAEC,IAAI,GAAG,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;IACxFR,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMS,aAAa,GAAG,IAAIC,eAAe,CAAC,CAAC;IAC3CP,kBAAkB,CAACQ,OAAO,CAACC,IAAI,CAACH,aAAa,CAAC;IAC9C,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAG,EAAE;QAChCC,MAAM;QACNC,IAAI;QACJC,OAAO;QACPO,MAAM,EAACN,aAAa,CAACM;MACvB,CAAC,CAAC;MAEF,MAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAE1Cd,kBAAkB,CAACQ,OAAO,GAAGR,kBAAkB,CAACQ,OAAO,CAACO,MAAM,CAACC,OAAO,IAAIA,OAAO,KAAKV,aAAa,CAAC;;MAEpG;MACA,IAAI,CAACI,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACL,YAAY,CAACM,OAAO,CAAC;MACvC;MACAtB,YAAY,CAAC,KAAK,CAAC;MACnB,OAAOgB,YAAY;IACrB,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZrB,QAAQ,CAACqB,GAAG,CAACD,OAAO,CAAC;MACrBtB,YAAY,CAAC,KAAK,CAAC;MACnB,MAAMuB,GAAG;IACX;EAEF,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBtB,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAEDN,SAAS,CAAC,MAAI;IACZ,OAAO,MAAM;MACTO,kBAAkB,CAACQ,OAAO,CAACc,OAAO,CAACC,SAAS,IAAIA,SAAS,CAACC,KAAK,CAAC,CAAC,CAAC;IACtE,CAAC;EACH,CAAC,EAAC,EAAE,CAAC;EAEL,OAAO;IAAC5B,SAAS;IAACE,KAAK;IAACG,WAAW;IAACoB;EAAU,CAAC;AACjD,CAAC;AAAC1B,EAAA,CA/CWD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}