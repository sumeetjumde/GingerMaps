{"ast":null,"code":"var _jsxFileName = \"/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/src/user/Pages/Auth.js\",\n  _s = $RefreshSig$();\n// import React, { useContext, useState } from \"react\";\n// import { useForm } from \"../../shared/hooks/form-hook\";\n// import Inputs from \"../../shared/Components/FormElements/Input\";\n// import { AuthContext } from \"../../shared/context/auth-context\";\n// import {VALIDATOR_EMAIL,VALIDATOR_MINLENGTH,VALIDATOR_REQUIRE} from \"../../shared/util/validators\";\n\n// const Auth = () => {\n//   const auth = useContext(AuthContext);\n//   const [isloggedin, setisloggedin] = useState(true);\n\n//   const [formState, inputHandler, setFormData] = useForm(\n//     {\n//       email: {\n//         value: \"\",\n//         isValid: false,\n//       },\n//       password: {\n//         value: \"\",\n//         isValid: false,\n//       },\n//       name: {\n//         value: \"\",\n//         isValid: false,\n//       },\n//     },\n//     false\n//   );\n\n//   const placeUpdateSubmitHandler = event => {\n//     event.preventDefault();\n//     console.log(formState.inputs);\n//     // if(isloggedin){\n\n//     // }\n//     // else{\n//     //   try{\n//     //     const response = await fetch('http://localhost:4000/api/users/signup',{\n//     //       method:'POST',\n//     //       headers:{\n//     //         'Content-Type':'application/json'\n//     //       },\n//     //       body:JSON.stringify({\n//     //         name:formState.inputs.name.value,\n//     //         email:formState.inputs.name.value,\n//     //         password:formState.inputs.name.value\n//     //       })\n//     //     });\n\n//     //     const responseData = await response.json();\n//     //     console.log(responseData);\n//     //   }\n//     //   catch(err){\n//     //     console.log(err);\n//     //   }\n\n//     // }    \n//     auth.login();\n//   };\n\n//   const switchLoggedInModeHandler = () => {\n//     if (!isloggedin) {\n//       setFormData(\n//         {\n//           ...formState.inputs,\n//           name: undefined\n//         },\n//         formState.inputs.email.isValid && formState.inputs.password.isValid\n//       );\n//     } else {\n//       setFormData(\n//         {\n//           ...formState.inputs,\n//           name: {\n//             value: '',\n//             isValid: false\n//           }\n//         },\n//         false\n//       );\n//     }\n//     setisloggedin(prevMode => !prevMode);\n//   };\n\n//   return (\n//     <React.Fragment>\n//       <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n//         {!isloggedin && (\n//           <Inputs\n//             id=\"name\"\n//             inputfieldtype=\"input\"\n//             type=\"text\"\n//             label=\"Name\"\n//             errorText=\"Please enter a valid Name\"\n//             onInput={inputHandler}\n//             validators={[VALIDATOR_REQUIRE()]}\n//             value={formState.inputs.name.value}\n//             valid={formState.inputs.name.isValid}          \n//           />         \n//         )}\n//         <Inputs\n//           id=\"email\"\n//           inputfieldtype=\"input\"\n//           type=\"email\"\n//           label=\"E-mail\"\n//           errorText=\"Please enter a valid Email\"\n//           onInput={inputHandler}\n//           validators={[VALIDATOR_EMAIL()]}\n//           value={formState.inputs.email.value}\n//           valid={formState.inputs.email.isValid}\n//         />\n//       <Inputs\n//         id=\"password\"\n//         inputfieldtype=\"input\"\n//         type=\"password\"\n//         label=\"Password\"\n//         errorText=\"Please enter a password\"\n//         onInput={inputHandler}\n//         validators={[VALIDATOR_MINLENGTH(5)]}\n//         value={formState.inputs.password.value}\n//         valid={formState.inputs.password.isValid}\n//       />\n\n//         <button type=\"submit\" disabled={!formState.isValid}>{isloggedin ? \"Login\" : \"Register\"}</button>\n//         <button onClick={switchLoggedInModeHandler}>\n//           {isloggedin ? \"Register\" : \"Login\"}\n//         </button>\n//       </form>\n//     </React.Fragment>\n//   );\n// };\n\n// export default Auth;\n\n////// demo\n\nimport React, { useState, useContext } from 'react';\nimport Inputs from '../../shared/Components/FormElements/Input';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({\n        ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({\n        ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n    if (isLoginMode) {} else {\n      try {\n        const response = await fetch('http://localhost:4000/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n        const responseData = await response.json();\n        console.log(responseData);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    auth.login();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authentication\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"place-form\",\n      onSubmit: authSubmitHandler,\n      children: [isLoginMode ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Please Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 49\n      }, this), !isLoginMode && /*#__PURE__*/_jsxDEV(Inputs, {\n        element: \"input\",\n        id: \"name\",\n        type: \"text\",\n        label: \"Your Name\",\n        validators: [VALIDATOR_REQUIRE()],\n        errorText: \"Please enter a name.\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n        element: \"input\",\n        id: \"email\",\n        type: \"email\",\n        label: \"E-Mail\",\n        validators: [VALIDATOR_EMAIL()],\n        errorText: \"Please enter a valid email address.\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n        element: \"input\",\n        id: \"password\",\n        type: \"password\",\n        label: \"Password\",\n        validators: [VALIDATOR_MINLENGTH(5)],\n        errorText: \"Please enter a valid password, at least 5 characters.\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !formState.isValid,\n        children: isLoginMode ? 'LOGIN' : 'SIGNUP'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      inverse: true,\n      onClick: switchModeHandler,\n      children: [\"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"it26s2BBt10k0kik9SPD1h3wAD8=\", false, function () {\n  return [useForm];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useContext","Inputs","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","AuthContext","jsxDEV","_jsxDEV","Auth","_s","auth","isLoginMode","setIsLoginMode","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","prevMode","authSubmitHandler","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","responseData","json","console","log","err","login","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","element","id","type","label","validators","errorText","onInput","disabled","inverse","onClick","_c","$RefreshReg$"],"sources":["/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/src/user/Pages/Auth.js"],"sourcesContent":["// import React, { useContext, useState } from \"react\";\n// import { useForm } from \"../../shared/hooks/form-hook\";\n// import Inputs from \"../../shared/Components/FormElements/Input\";\n// import { AuthContext } from \"../../shared/context/auth-context\";\n// import {VALIDATOR_EMAIL,VALIDATOR_MINLENGTH,VALIDATOR_REQUIRE} from \"../../shared/util/validators\";\n\n// const Auth = () => {\n//   const auth = useContext(AuthContext);\n//   const [isloggedin, setisloggedin] = useState(true);\n\n//   const [formState, inputHandler, setFormData] = useForm(\n//     {\n//       email: {\n//         value: \"\",\n//         isValid: false,\n//       },\n//       password: {\n//         value: \"\",\n//         isValid: false,\n//       },\n//       name: {\n//         value: \"\",\n//         isValid: false,\n//       },\n//     },\n//     false\n//   );\n\n//   const placeUpdateSubmitHandler = event => {\n//     event.preventDefault();\n//     console.log(formState.inputs);\n//     // if(isloggedin){\n\n//     // }\n//     // else{\n//     //   try{\n//     //     const response = await fetch('http://localhost:4000/api/users/signup',{\n//     //       method:'POST',\n//     //       headers:{\n//     //         'Content-Type':'application/json'\n//     //       },\n//     //       body:JSON.stringify({\n//     //         name:formState.inputs.name.value,\n//     //         email:formState.inputs.name.value,\n//     //         password:formState.inputs.name.value\n//     //       })\n//     //     });\n\n//     //     const responseData = await response.json();\n//     //     console.log(responseData);\n//     //   }\n//     //   catch(err){\n//     //     console.log(err);\n//     //   }\n      \n//     // }    \n//     auth.login();\n//   };\n\n\n\n//   const switchLoggedInModeHandler = () => {\n//     if (!isloggedin) {\n//       setFormData(\n//         {\n//           ...formState.inputs,\n//           name: undefined\n//         },\n//         formState.inputs.email.isValid && formState.inputs.password.isValid\n//       );\n//     } else {\n//       setFormData(\n//         {\n//           ...formState.inputs,\n//           name: {\n//             value: '',\n//             isValid: false\n//           }\n//         },\n//         false\n//       );\n//     }\n//     setisloggedin(prevMode => !prevMode);\n//   };\n\n//   return (\n//     <React.Fragment>\n//       <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n//         {!isloggedin && (\n//           <Inputs\n//             id=\"name\"\n//             inputfieldtype=\"input\"\n//             type=\"text\"\n//             label=\"Name\"\n//             errorText=\"Please enter a valid Name\"\n//             onInput={inputHandler}\n//             validators={[VALIDATOR_REQUIRE()]}\n//             value={formState.inputs.name.value}\n//             valid={formState.inputs.name.isValid}          \n//           />         \n//         )}\n//         <Inputs\n//           id=\"email\"\n//           inputfieldtype=\"input\"\n//           type=\"email\"\n//           label=\"E-mail\"\n//           errorText=\"Please enter a valid Email\"\n//           onInput={inputHandler}\n//           validators={[VALIDATOR_EMAIL()]}\n//           value={formState.inputs.email.value}\n//           valid={formState.inputs.email.isValid}\n//         />\n//       <Inputs\n//         id=\"password\"\n//         inputfieldtype=\"input\"\n//         type=\"password\"\n//         label=\"Password\"\n//         errorText=\"Please enter a password\"\n//         onInput={inputHandler}\n//         validators={[VALIDATOR_MINLENGTH(5)]}\n//         value={formState.inputs.password.value}\n//         valid={formState.inputs.password.isValid}\n//       />\n\n//         <button type=\"submit\" disabled={!formState.isValid}>{isloggedin ? \"Login\" : \"Register\"}</button>\n//         <button onClick={switchLoggedInModeHandler}>\n//           {isloggedin ? \"Register\" : \"Login\"}\n//         </button>\n//       </form>\n//     </React.Fragment>\n//   );\n// };\n\n// export default Auth;\n\n\n////// demo\n\n\nimport React, { useState, useContext } from 'react';\n\nimport Inputs from '../../shared/Components/FormElements/Input';\n\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n    } else {\n      try {\n        const response = await fetch('http://localhost:4000/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n\n        const responseData = await response.json();\n        console.log(responseData);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    auth.login();\n  };\n\n  return (\n    <div className=\"authentication\">\n      <form className=\"place-form\" onSubmit={authSubmitHandler}>\n      {isLoginMode ? (<h2>Login Required</h2>):(<h2>Please Signup</h2>)}\n        {!isLoginMode && (\n          <Inputs\n            element=\"input\"\n            id=\"name\"\n            type=\"text\"\n            label=\"Your Name\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a name.\"\n            onInput={inputHandler}\n          />\n        )}\n        <Inputs\n          element=\"input\"\n          id=\"email\"\n          type=\"email\"\n          label=\"E-Mail\"\n          validators={[VALIDATOR_EMAIL()]}\n          errorText=\"Please enter a valid email address.\"\n          onInput={inputHandler}\n        />\n        <Inputs\n          element=\"input\"\n          id=\"password\"\n          type=\"password\"\n          label=\"Password\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid password, at least 5 characters.\"\n          onInput={inputHandler}\n        />\n        <button type=\"submit\" disabled={!formState.isValid}>\n          {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n        </button>\n      </form>\n      <button inverse onClick={switchModeHandler}>\n        SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n      </button>\n    </div>\n  );\n};\n\nexport default Auth;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAEnD,OAAOC,MAAM,MAAM,4CAA4C;AAE/D,SACEC,eAAe,EACfC,mBAAmB,EACnBC,iBAAiB,QACZ,8BAA8B;AACrC,SAASC,OAAO,QAAQ,8BAA8B;AACtD,SAASC,WAAW,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhE,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,IAAI,GAAGX,UAAU,CAACM,WAAW,CAAC;EACpC,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAM,CAACe,SAAS,EAAEC,YAAY,EAAEC,WAAW,CAAC,GAAGX,OAAO,CACpD;IACEY,KAAK,EAAE;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;IACDC,QAAQ,EAAE;MACRF,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX;EACF,CAAC,EACD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"},"metadata":{},"sourceType":"module","externalDependencies":[]}