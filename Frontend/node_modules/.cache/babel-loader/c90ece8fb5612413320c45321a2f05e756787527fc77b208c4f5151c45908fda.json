{"ast":null,"code":"var _jsxFileName = \"/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/src/places/Pages/UserPlaces.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport PlaceList from \"../Components/PlaceList\";\nimport { useParams } from \"react-router-dom\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport ErrorModal from \"../../shared/Components/ErrorModal\";\nimport LoadingSpinner from \"../../shared/Components/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPlaces = () => {\n  _s();\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const userId = useParams().userId;\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:4000/api/places/user/${userId}`);\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n  const placeDeleteHandler = deletedPlaceId => {\n    setLoadedPlaces(prevPlaces => prevPlaces.filter(place => place.id !== deletedPlaceId));\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 22\n    }, this), !isLoading && loadedPlaces && /*#__PURE__*/_jsxDEV(PlaceList, {\n      items: loadedPlaces,\n      onDeletePlace: placeDeleteHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPlaces, \"Jjx8x1DuBEzTmxOEV/N+WrTeEac=\", false, function () {\n  return [useHttpClient, useParams];\n});\n_c = UserPlaces;\nexport default UserPlaces;\nvar _c;\n$RefreshReg$(_c, \"UserPlaces\");","map":{"version":3,"names":["React","useEffect","useState","PlaceList","useParams","useHttpClient","ErrorModal","LoadingSpinner","jsxDEV","_jsxDEV","UserPlaces","_s","loadedPlaces","setLoadedPlaces","isLoading","error","sendRequest","clearError","userId","fetchPlaces","responseData","places","err","placeDeleteHandler","deletedPlaceId","prevPlaces","filter","place","id","Fragment","children","onClear","fileName","_jsxFileName","lineNumber","columnNumber","items","onDeletePlace","_c","$RefreshReg$"],"sources":["/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/src/places/Pages/UserPlaces.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PlaceList from \"../Components/PlaceList\";\nimport { useParams } from \"react-router-dom\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport ErrorModal from \"../../shared/Components/ErrorModal\";\nimport LoadingSpinner from \"../../shared/Components/LoadingSpinner\";\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `http://localhost:4000/api/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n\nconst placeDeleteHandler = deletedPlaceId => {\n  setLoadedPlaces(prevPlaces => prevPlaces.filter(place => place.id !== deletedPlaceId));\n};\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (<LoadingSpinner />)}  \n      {!isLoading && loadedPlaces && <PlaceList items={loadedPlaces} onDeletePlace={placeDeleteHandler}/>}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,aAAa,QAAQ,8BAA8B;AAC5D,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,cAAc,MAAM,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAClD,MAAM;IAAEY,SAAS;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAW,CAAC,GAAGZ,aAAa,CAAC,CAAC;EAErE,MAAMa,MAAM,GAAGd,SAAS,CAAC,CAAC,CAACc,MAAM;EAEjCjB,SAAS,CAAC,MAAM;IACd,MAAMkB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,YAAY,GAAG,MAAMJ,WAAW,CACnC,yCAAwCE,MAAO,EAClD,CAAC;QACDL,eAAe,CAACO,YAAY,CAACC,MAAM,CAAC;MACtC,CAAC,CAAC,OAAOC,GAAG,EAAE,CAAC;IACjB,CAAC;IACDH,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACH,WAAW,EAAEE,MAAM,CAAC,CAAC;EAG3B,MAAMK,kBAAkB,GAAGC,cAAc,IAAI;IAC3CX,eAAe,CAACY,UAAU,IAAIA,UAAU,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKJ,cAAc,CAAC,CAAC;EACxF,CAAC;EAEC,oBACEf,OAAA,CAACT,KAAK,CAAC6B,QAAQ;IAAAC,QAAA,gBACbrB,OAAA,CAACH,UAAU;MAACS,KAAK,EAAEA,KAAM;MAACgB,OAAO,EAAEd;IAAW;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChDrB,SAAS,iBAAKL,OAAA,CAACF,cAAc;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAE,EACjC,CAACrB,SAAS,IAAIF,YAAY,iBAAIH,OAAA,CAACN,SAAS;MAACiC,KAAK,EAAExB,YAAa;MAACyB,aAAa,EAAEd;IAAmB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrF,CAAC;AAErB,CAAC;AAACxB,EAAA,CA9BID,UAAU;EAAA,QAEwCL,aAAa,EAEpDD,SAAS;AAAA;AAAAkC,EAAA,GAJpB5B,UAAU;AAgChB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}