{"ast":null,"code":"import combine from \"./combine\";\nimport resolveValue from \"./utils/resolveValue\";\nexport var lazyLoadCallback = function (callback) {\n  return {\n    kind: \"lazyLoadCallback\",\n    callback: callback\n  };\n};\nexport var propsCallback = function (callback) {\n  return {\n    kind: \"propsCallback\",\n    callback: callback\n  };\n};\nexport var stateCallback = function (callback) {\n  return {\n    kind: \"stateCallback\",\n    callback: callback\n  };\n};\nexport var childContextCallback = function (callback) {\n  return {\n    kind: \"childContextCallback\",\n    callback: callback\n  };\n};\nexport var skipCallback = function (callback) {\n  return {\n    kind: \"skipCallback\",\n    callback: callback\n  };\n};\nexport var renderCallback = function (callback) {\n  return {\n    kind: \"renderCallback\",\n    callback: callback\n  };\n};\nexport var componentWillMountCallback = function (callback) {\n  return {\n    kind: \"componentWillMountCallback\",\n    callback: callback\n  };\n};\nexport var componentDidMountCallback = function (callback) {\n  return {\n    kind: \"componentDidMountCallback\",\n    callback: callback\n  };\n};\nexport var componentWillUnmountCallback = function (callback) {\n  return {\n    kind: \"componentWillUnmountCallback\",\n    callback: callback\n  };\n};\nexport var componentWillReceivePropsCallback = function (callback) {\n  return {\n    kind: \"componentWillReceivePropsCallback\",\n    callback: callback\n  };\n};\nexport var shouldComponentUpdateCallback = function (callback) {\n  return {\n    kind: \"shouldComponentUpdateCallback\",\n    callback: callback\n  };\n};\nexport var componentWillUpdateCallback = function (callback) {\n  return {\n    kind: \"componentWillUpdateCallback\",\n    callback: callback\n  };\n};\nexport var componentDidUpdateCallback = function (callback) {\n  return {\n    kind: \"componentDidUpdateCallback\",\n    callback: callback\n  };\n};\nexport function createBlueprint() {\n  var composables = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    composables[_i] = arguments[_i];\n  }\n  var componentCallbacks = combine.apply(void 0, composables);\n  return {\n    staticCallbacks: componentCallbacks.filter(function (c) {\n      return c.staticCallback;\n    }).map(function (c) {\n      return c.staticCallback;\n    }),\n    instanceCallbacks: function () {\n      var result = [];\n      componentCallbacks.forEach(function (c) {\n        if (!c.instanceCallbacks) {\n          return;\n        }\n        var instanceCallbacks = resolveValue(c.instanceCallbacks);\n        if (!instanceCallbacks) {\n          return;\n        }\n        result.push.apply(result, instanceCallbacks);\n      });\n      return result;\n    }\n  };\n}","map":{"version":3,"names":["combine","resolveValue","lazyLoadCallback","callback","kind","propsCallback","stateCallback","childContextCallback","skipCallback","renderCallback","componentWillMountCallback","componentDidMountCallback","componentWillUnmountCallback","componentWillReceivePropsCallback","shouldComponentUpdateCallback","componentWillUpdateCallback","componentDidUpdateCallback","createBlueprint","composables","_i","arguments","length","componentCallbacks","apply","staticCallbacks","filter","c","staticCallback","map","instanceCallbacks","result","forEach","push"],"sources":["/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/node_modules/reassemble/lib/blueprint.ts"],"sourcesContent":["import { ComponentClass } from \"react\";\n\nimport { ReactComponent, ReactAnyComponent } from \"./types\";\nimport combine from \"./combine\";\nimport resolveValue from \"./utils/resolveValue\";\n\nexport type StateUpdater<T> = (newState: T, callback?: () => void) => void;\n\nexport type StaticCallback = (componentClass: ComponentClass<any>, target: ReactComponent<any> | string) => void;\n\nexport type LifeCycleCallbackTypes = {\n  componentWillMountCallback?: (props: any, state: any, context: any) => () => void;\n  componentDidMountCallback?: (props: any, state: any, context: any) => () => void;\n  componentWillUnmountCallback?: (props: any, state: any, context: any) => () => void;\n  componentWillReceivePropsCallback?: (props: any, state: any, context: any) => () => void;\n  shouldComponentUpdateCallback?: (props: any, state: any, context: any) => () => boolean;\n  componentWillUpdateCallback?: (props: any, state: any, context: any) => () => void;\n  componentDidUpdateCallback?: (props: any, state: any, context: any) => () => void;\n};\n\nexport type InstanceCallbackTypes = LifeCycleCallbackTypes & {\n  lazyLoadCallback?: (props: any, state: any, context: any) => InstanceCallbackList;\n  propsCallback?: (props: any, state: any, context: any) => any;\n  childContextCallback?: (childContext: any, props: any, state: any, context: any) => any;\n  stateCallback?: (\n    initState: (name: string, value: any) => { name: string, updater: StateUpdater<any> },\n    props: any, state: any, context: any,\n  ) => void;\n  skipCallback?: (props: any, state: any, context: any) => number;\n  renderCallback?: (component: ReactAnyComponent, props: any, state: any, context: any) => ReactAnyComponent;\n};\n\nexport type InstanceCallbackEntry<T extends keyof InstanceCallbackTypes> = {\n  kind: T,\n  callback: InstanceCallbackTypes[T],\n};\n\n/*\n * TODO(cvle): Bug: using the typesafe version does not work.\n * Log: Return type of exported function has or is using name 'InstanceCallbackEntry'\n * from external module \"./src/blueprint\" but cannot be named.\n */\nexport type InstanceCallbackList =\n  Array<InstanceCallbackEntry<any>>;\n\nexport type InstanceCallbackListTypesafe =\n  Array<InstanceCallbackEntry<\"lazyLoadCallback\">\n  | InstanceCallbackEntry<\"propsCallback\">\n  | InstanceCallbackEntry<\"stateCallback\">\n  | InstanceCallbackEntry<\"childContextCallback\">\n  | InstanceCallbackEntry<\"skipCallback\">\n  | InstanceCallbackEntry<\"renderCallback\">\n  | InstanceCallbackEntry<\"componentWillMountCallback\">\n  | InstanceCallbackEntry<\"componentDidMountCallback\">\n  | InstanceCallbackEntry<\"componentWillUnmountCallback\">\n  | InstanceCallbackEntry<\"componentWillReceivePropsCallback\">\n  | InstanceCallbackEntry<\"shouldComponentUpdateCallback\">\n  | InstanceCallbackEntry<\"componentWillUpdateCallback\">\n  | InstanceCallbackEntry<\"componentDidUpdateCallback\">>;\n\nexport type ComponentCallbacks = {\n  staticCallback?: StaticCallback;\n  instanceCallbacks?: (() => InstanceCallbackList) | InstanceCallbackList;\n};\n\nexport type Composable = ComponentCallbacks | ComponentCallbacks[];\n\nexport type CallbackEntryHelper<T extends keyof InstanceCallbackTypes> =\n  (callback: InstanceCallbackTypes[T]) => InstanceCallbackEntry<T>;\n\nexport const lazyLoadCallback: CallbackEntryHelper<\"lazyLoadCallback\"> =\n  (callback) => ({ kind: \"lazyLoadCallback\", callback });\n\nexport const propsCallback: CallbackEntryHelper<\"propsCallback\"> =\n  (callback) => ({ kind: \"propsCallback\", callback });\n\nexport const stateCallback: CallbackEntryHelper<\"stateCallback\"> =\n  (callback) => ({ kind: \"stateCallback\", callback });\n\nexport const childContextCallback: CallbackEntryHelper<\"childContextCallback\"> =\n  (callback) => ({ kind: \"childContextCallback\", callback });\n\nexport const skipCallback: CallbackEntryHelper<\"skipCallback\"> =\n  (callback) => ({ kind: \"skipCallback\", callback });\n\nexport const renderCallback: CallbackEntryHelper<\"renderCallback\"> =\n  (callback) => ({ kind: \"renderCallback\", callback });\n\nexport const componentWillMountCallback: CallbackEntryHelper<\"componentWillMountCallback\"> =\n  (callback) => ({ kind: \"componentWillMountCallback\", callback });\n\nexport const componentDidMountCallback: CallbackEntryHelper<\"componentDidMountCallback\"> =\n  (callback) => ({ kind: \"componentDidMountCallback\", callback });\n\nexport const componentWillUnmountCallback: CallbackEntryHelper<\"componentWillUnmountCallback\"> =\n  (callback) => ({ kind: \"componentWillUnmountCallback\", callback });\n\nexport const componentWillReceivePropsCallback: CallbackEntryHelper<\"componentWillReceivePropsCallback\"> =\n  (callback) => ({ kind: \"componentWillReceivePropsCallback\", callback });\n\nexport const shouldComponentUpdateCallback: CallbackEntryHelper<\"shouldComponentUpdateCallback\"> =\n  (callback) => ({ kind: \"shouldComponentUpdateCallback\", callback });\n\nexport const componentWillUpdateCallback: CallbackEntryHelper<\"componentWillUpdateCallback\"> =\n  (callback) => ({ kind: \"componentWillUpdateCallback\", callback });\n\nexport const componentDidUpdateCallback: CallbackEntryHelper<\"componentDidUpdateCallback\"> =\n  (callback) => ({ kind: \"componentDidUpdateCallback\", callback });\n\nexport type Blueprint = {\n  staticCallbacks?: StaticCallback[];\n  instanceCallbacks?: () => InstanceCallbackListTypesafe;\n};\n\nexport function createBlueprint(...composables: Composable[]): Blueprint {\n  const componentCallbacks: ComponentCallbacks[] = combine(...composables) as ComponentCallbacks[];\n  return {\n    staticCallbacks: componentCallbacks.filter((c) => c.staticCallback).map((c) => c.staticCallback),\n    instanceCallbacks: () => {\n      const result: InstanceCallbackList = [];\n      componentCallbacks.forEach((c) => {\n        if (!c.instanceCallbacks) { return; }\n        const instanceCallbacks: any = resolveValue(c.instanceCallbacks);\n        if (!instanceCallbacks) { return; }\n        result.push(...instanceCallbacks);\n      });\n      return result;\n    },\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}