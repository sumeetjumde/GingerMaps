{"ast":null,"code":"var _jsxFileName = \"/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/src/places/Pages/UpdatePlace.js\",\n  _s = $RefreshSig$();\nimport { Button } from \"@material-ui/core\";\nimport Inputs from \"../../shared/Components/FormElements/Input\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"../Components/PlaceList.css\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport LoadingSpinner from \"../../shared/Components/LoadingSpinner\";\nimport ErrorModal from \"../../shared/Components/ErrorModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePlace = () => {\n  _s();\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const [formState, inputHandler, setFormData] = useForm({\n    title: {\n      value: \"\",\n      isValid: false\n    },\n    description: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:4000/api/places/${placeId}`);\n        setLoadedPlace(responseData.place);\n        setFormData({\n          title: {\n            value: responseData.place.title,\n            isValid: true\n          },\n          description: {\n            value: responseData.place.description,\n            isValid: true\n          }\n        }, true);\n      } catch (err) {}\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n  const placeUpdateSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n  if (!loadedPlace && !error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Place Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), !isLoading && loadedPlace && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"place-form\",\n      onSubmit: placeUpdateSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Inputs, {\n        id: \"Title\",\n        inputfieldtype: \"input\",\n        type: \"text\",\n        label: \"Title\",\n        errorText: \"Please enter a valid title\",\n        onInput: inputHandler,\n        value: loadedPlace.title,\n        valid: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n        id: \"Description\",\n        inputfieldtype: \"textarea\",\n        label: \"Description\",\n        errorText: \"Please enter a valid Description\",\n        onInput: inputHandler,\n        value: loadedPlace.description,\n        valid: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Update Place\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdatePlace, \"1oMLZHPwttnSPDPKfoehk7TMMDQ=\", false, function () {\n  return [useHttpClient, useParams, useForm];\n});\n_c = UpdatePlace;\nexport default UpdatePlace;\nvar _c;\n$RefreshReg$(_c, \"UpdatePlace\");","map":{"version":3,"names":["Button","Inputs","React","useEffect","useState","useParams","useForm","useHttpClient","LoadingSpinner","ErrorModal","jsxDEV","_jsxDEV","UpdatePlace","_s","isLoading","error","sendRequest","clearError","loadedPlace","setLoadedPlace","placeId","formState","inputHandler","setFormData","title","value","isValid","description","fetchPlace","responseData","place","err","placeUpdateSubmitHandler","event","preventDefault","console","log","inputs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","onClear","onSubmit","id","inputfieldtype","type","label","errorText","onInput","valid","_c","$RefreshReg$"],"sources":["/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/src/places/Pages/UpdatePlace.js"],"sourcesContent":["import { Button } from \"@material-ui/core\";\nimport Inputs from \"../../shared/Components/FormElements/Input\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\n\nimport \"../Components/PlaceList.css\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport LoadingSpinner from \"../../shared/Components/LoadingSpinner\";\nimport ErrorModal from \"../../shared/Components/ErrorModal\";\n\nconst UpdatePlace = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `http://localhost:4000/api/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true,\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true,\n            },\n          },\n          true\n        );\n      } catch (err) {}\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = (event) => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <h2>Place Not Found</h2>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Inputs\n            id=\"Title\"\n            inputfieldtype=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            errorText=\"Please enter a valid title\"\n            onInput={inputHandler}\n            value={loadedPlace.title}\n            valid={true}\n          />\n          <Inputs\n            id=\"Description\"\n            inputfieldtype=\"textarea\"\n            label=\"Description\"\n            errorText=\"Please enter a valid Description\"\n            onInput={inputHandler}\n            value={loadedPlace.description}\n            valid={true}\n          />\n          <Button type=\"submit\">Update Place</Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlace;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}