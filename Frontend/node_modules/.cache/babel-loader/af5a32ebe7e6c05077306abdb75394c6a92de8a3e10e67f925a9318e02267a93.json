{"ast":null,"code":"import shouldUpdate from \"./shouldUpdate\";\nimport shallowEqual from \"./utils/shallowEqual\";\nimport pick from \"./utils/pick\";\nexport function onlyUpdateForKeys(propKeys) {\n  return shouldUpdate(function (prev, next) {\n    return !shallowEqual(pick.apply(void 0, [prev].concat(propKeys)), pick.apply(void 0, [next].concat(propKeys)));\n  });\n}\nexport default onlyUpdateForKeys;","map":{"version":3,"names":["shouldUpdate","shallowEqual","pick","onlyUpdateForKeys","propKeys","prev","next","apply","concat"],"sources":["/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/node_modules/reassemble/lib/onlyUpdateForKeys.ts"],"sourcesContent":["import { Composable } from \"./blueprint\";\nimport shouldUpdate from \"./shouldUpdate\";\nimport shallowEqual from \"./utils/shallowEqual\";\nimport pick from \"./utils/pick\";\n\nexport function onlyUpdateForKeys<T extends string>(propKeys: Array<T | symbol>): Composable {\n  return shouldUpdate((prev, next) => !shallowEqual(pick(prev, ...propKeys), pick(next, ...propKeys)));\n}\n\nexport default onlyUpdateForKeys;\n"],"mappings":"AACA,OAAOA,YAAY,MAAM,gBAAgB;AACzC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,IAAI,MAAM,cAAc;AAE/B,OAAM,SAAAC,kBAA8CC,QAA2B;EAC7E,OAAOJ,YAAY,CAAC,UAACK,IAAI,EAAEC,IAAI;IAAK,QAACL,YAAY,CAACC,IAAI,CAAAK,KAAA,UAACF,IAAI,EAAAG,MAAA,CAAKJ,QAAQ,IAAGF,IAAI,CAAAK,KAAA,UAACD,IAAI,EAAAE,MAAA,CAAKJ,QAAQ,GAAE;EAA/D,CAA+D,CAAC;AACtG;AAEA,eAAeD,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}