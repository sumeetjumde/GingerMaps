{"ast":null,"code":"var __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n  return t;\n};\nimport { stateCallback, propsCallback } from \"./blueprint\";\nimport resolveValue from \"./utils/resolveValue\";\nexport function withState(stateName, updaterName, initialValue) {\n  return {\n    instanceCallbacks: function () {\n      var update;\n      var name;\n      return [stateCallback(function (initState, props) {\n        var newState = initState(String(stateName), resolveValue(initialValue, props));\n        update = newState.updater;\n        name = newState.name;\n      }), propsCallback(function (props, state) {\n        return __assign({}, props, (_a = {}, _a[stateName] = state[name], _a[updaterName] = update, _a));\n        var _a;\n      })];\n    }\n  };\n}\nexport default withState;","map":{"version":3,"names":["stateCallback","propsCallback","resolveValue","withState","stateName","updaterName","initialValue","instanceCallbacks","update","name","initState","props","newState","String","updater","state","__assign","_a"],"sources":["/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/node_modules/reassemble/lib/withState.ts"],"sourcesContent":["import { Composable, stateCallback, propsCallback } from \"./blueprint\";\nimport { Mapper } from \"./types\";\nimport resolveValue from \"./utils/resolveValue\";\n\n// TODO: typings without TPropsIn.\n\nexport function withState(\n  stateName: string | symbol,\n  updaterName: string | symbol,\n  initialValue: Object | Mapper<any, any>,\n): Composable;\n\nexport function withState<TPropsIn, TPropNames extends string | symbol, TPropValue>(\n  stateName: TPropNames,\n  updaterName: TPropNames,\n  initialValue: TPropValue | Mapper<TPropsIn, TPropValue>,\n): Composable;\n\nexport function withState<TPropsIn, TPropNames extends string | symbol, TPropValue>(\n  stateName: TPropNames,\n  updaterName: TPropNames,\n  initialValue: TPropValue | Mapper<TPropsIn, TPropValue>,\n): Composable {\n  return {\n    instanceCallbacks: () => {\n      let update: any;\n      let name: any;\n      return [\n        stateCallback((initState, props) => {\n          const newState = initState(String(stateName), resolveValue(initialValue, props));\n          update = newState.updater;\n          name = newState.name;\n        }),\n        propsCallback((props, state) => ({\n          ...props,\n          [stateName as string]: state[name],\n          [updaterName as string]: update,\n        })),\n      ];\n    },\n  };\n}\n\nexport default withState;\n"],"mappings":";;;;;;;AAAA,SAAqBA,aAAa,EAAEC,aAAa,QAAQ,aAAa;AAEtE,OAAOC,YAAY,MAAM,sBAAsB;AAgB/C,OAAM,SAAAC,UACJC,SAAqB,EACrBC,WAAuB,EACvBC,YAAuD;EAEvD,OAAO;IACLC,iBAAiB,EAAE,SAAAA,CAAA;MACjB,IAAIC,MAAW;MACf,IAAIC,IAAS;MACb,OAAO,CACLT,aAAa,CAAC,UAACU,SAAS,EAAEC,KAAK;QAC7B,IAAMC,QAAQ,GAAGF,SAAS,CAACG,MAAM,CAACT,SAAS,CAAC,EAAEF,YAAY,CAACI,YAAY,EAAEK,KAAK,CAAC,CAAC;QAChFH,MAAM,GAAGI,QAAQ,CAACE,OAAO;QACzBL,IAAI,GAAGG,QAAQ,CAACH,IAAI;MACtB,CAAC,CAAC,EACFR,aAAa,CAAC,UAACU,KAAK,EAAEI,KAAK;QAAK,OAAAC,QAAA,KAC3BL,KAAK,GAAAM,EAAA,OAAAA,EAAA,CACPb,SAAmB,IAAGW,KAAK,CAACN,IAAI,CAAC,EAAAQ,EAAA,CACjCZ,WAAqB,IAAGG,MAAM,EAAAS,EAAA;;MAHD,CAI9B,CAAC,CACJ;IACH;GACD;AACH;AAEA,eAAed,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}