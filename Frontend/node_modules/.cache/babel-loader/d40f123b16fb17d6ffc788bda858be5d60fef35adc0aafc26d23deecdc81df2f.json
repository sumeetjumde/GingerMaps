{"ast":null,"code":"import { combine, withState, withHandlers, withProps, onDidMount, onWillUnmount, onWillReceiveProps, isolate, integrate, onDidUpdate } from \"reassemble\";\nimport runInFrame from \"../utils/runInFrame\";\nimport pick from \"../utils/pick\";\nimport { ActionID, StateID, actionPropKeys } from \"../reducer\";\nvar pickTransitionState = function (state) {\n  return pick(state, \"style\", \"className\", \"inTransition\", \"id\");\n};\nexport var withTransitionState = function (reduce) {\n  return combine(isolate(withProps(function (props) {\n    return {\n      actionProps: pick.apply(void 0, [props].concat(actionPropKeys))\n    };\n  }), withState(\"transitionState\", \"setTransitionState\", function (_a) {\n    var actionProps = _a.actionProps;\n    return pickTransitionState(reduce(StateID.EntryPoint, {\n      kind: ActionID.New,\n      props: actionProps\n    }).state);\n  }), withHandlers(function (initialProps) {\n    var stateID = reduce(StateID.EntryPoint, {\n      kind: ActionID.New,\n      props: initialProps\n    }).state.id;\n    var cancelPending = null;\n    var pendingCallback;\n    var cancelPendingIfExistent = function () {\n      if (cancelPending) {\n        cancelPending();\n        cancelPending = null;\n      }\n    };\n    return {\n      cancelPendingIfExistent: function () {\n        return cancelPendingIfExistent;\n      },\n      runPending: function () {\n        return function () {\n          var callback = pendingCallback;\n          pendingCallback = null;\n          if (callback) {\n            callback();\n          }\n        };\n      },\n      dispatch: function (_a) {\n        var actionProps = _a.actionProps,\n          onTransitionComplete = _a.onTransitionComplete,\n          setTransitionState = _a.setTransitionState;\n        var run = function (actionID) {\n          var result = reduce(stateID, {\n            kind: actionID,\n            props: actionProps\n          });\n          if (!result) {\n            return;\n          }\n          if (result.completed && onTransitionComplete) {\n            onTransitionComplete();\n          }\n          var state = result.state,\n            pending = result.pending;\n          stateID = state.id;\n          cancelPendingIfExistent();\n          if (pending) {\n            pendingCallback = function () {\n              cancelPending = runInFrame(1, function () {\n                return run(pending);\n              });\n            };\n          }\n          setTransitionState(pickTransitionState(state));\n        };\n        return run;\n      }\n    };\n  }), withHandlers({\n    onTransitionBegin: function (_a) {\n      var dispatch = _a.dispatch;\n      return function () {\n        return dispatch(ActionID.TransitionStart);\n      };\n    },\n    onTransitionComplete: function (_a) {\n      var dispatch = _a.dispatch;\n      return function () {\n        return dispatch(ActionID.TransitionComplete);\n      };\n    },\n    timeout: function (_a) {\n      var dispatch = _a.dispatch;\n      return function () {\n        return dispatch(ActionID.Timeout);\n      };\n    }\n  }), onDidMount(function (_a) {\n    var dispatch = _a.dispatch;\n    dispatch(ActionID.Mount);\n  }), onWillReceiveProps(function (_a, _b) {\n    var prevActive = _a.active;\n    var nextActive = _b.active,\n      dispatch = _b.dispatch;\n    if (prevActive === nextActive) {\n      return;\n    }\n    dispatch(ActionID.TransitionTrigger);\n  }), onDidUpdate(function (_a) {\n    var runPending = _a.runPending;\n    runPending();\n  }), onWillUnmount(function (_a) {\n    var cancelPendingIfExistent = _a.cancelPendingIfExistent;\n    cancelPendingIfExistent();\n  }), integrate(\"timeout\", \"transitionState\", \"onTransitionBegin\", \"onTransitionComplete\")));\n};","map":{"version":3,"names":["combine","withState","withHandlers","withProps","onDidMount","onWillUnmount","onWillReceiveProps","isolate","integrate","onDidUpdate","runInFrame","pick","ActionID","StateID","actionPropKeys","pickTransitionState","state","withTransitionState","reduce","props","actionProps","apply","concat","_a","EntryPoint","kind","New","initialProps","stateID","id","cancelPending","pendingCallback","cancelPendingIfExistent","runPending","callback","dispatch","onTransitionComplete","setTransitionState","run","actionID","result","completed","pending","onTransitionBegin","TransitionStart","TransitionComplete","timeout","Timeout","Mount","_b","prevActive","active","nextActive","TransitionTrigger"],"sources":["/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/node_modules/react-css-transition/lib/composables/composables/withTransitionState.tsx"],"sourcesContent":["import { CSSProperties } from \"react\";\nimport {\n  combine, withState, withHandlers, withProps,\n  onDidMount, onWillUnmount, onWillReceiveProps,\n  isolate, integrate, StateUpdater, onDidUpdate,\n} from \"reassemble\";\n\nimport { CSSTransitionProps, CSSTransitionInnerProps } from \"../csstransition\";\nimport runInFrame from \"../utils/runInFrame\";\nimport pick from \"../utils/pick\";\nimport { ActionID, StateID, Reducer, actionPropKeys, ActionPropKeys } from \"../reducer\";\n\nexport type TransitionState = {\n  id?: StateID,\n  style?: CSSProperties,\n  className?: string,\n  inTransition?: boolean,\n};\n\nexport type WithTransitionStateProps = {\n  transitionState?: TransitionState,\n  timeout?: () => void,\n};\n\ntype PropsOut =\n  WithTransitionStateProps & {\n    actionProps?: {[P in ActionPropKeys]?: CSSTransitionProps[P]},\n    cancelPendingIfExistent?: () => void,\n    dispatch?: (actionID: ActionID) => void,\n    runPending?: () => void,\n    setTransitionState?: StateUpdater<TransitionState>,\n    onTransitionBegin?: CSSTransitionInnerProps[\"onTransitionBegin\"],\n    onTransitionComplete?: CSSTransitionInnerProps[\"onTransitionComplete\"],\n  };\n\ntype PropsUnion = CSSTransitionProps & PropsOut;\n\nconst pickTransitionState = (state: any) => pick(state, \"style\", \"className\", \"inTransition\", \"id\");\n\nexport const withTransitionState = (reduce: Reducer) => combine(\n  isolate(\n    withProps<PropsUnion, PropsOut>(\n      (props) => ({ actionProps: pick(props, ...actionPropKeys) }),\n    ),\n    withState<PropsUnion, keyof PropsOut, TransitionState>(\n      \"transitionState\", \"setTransitionState\",\n      ({actionProps}) =>\n        pickTransitionState(\n          reduce(StateID.EntryPoint, { kind: ActionID.New, props: actionProps }).state,\n        ),\n    ),\n    withHandlers<PropsUnion, PropsOut>(\n      (initialProps) => {\n        let stateID = reduce(StateID.EntryPoint, { kind: ActionID.New, props: initialProps }).state.id;\n        let cancelPending: () => void = null;\n        let pendingCallback: () => void;\n        const cancelPendingIfExistent = () => {\n          if (cancelPending) {\n            cancelPending();\n            cancelPending = null;\n          }\n        };\n        return {\n          cancelPendingIfExistent: () => cancelPendingIfExistent,\n          runPending: () => () => {\n            const callback = pendingCallback;\n            pendingCallback = null;\n            if (callback) {\n              callback();\n            }\n          },\n          dispatch: ({actionProps, onTransitionComplete, setTransitionState}) => {\n            const run = (actionID: ActionID) => {\n              const result = reduce(stateID, { kind: actionID, props: actionProps });\n              if (!result) { return; }\n              if (result.completed && onTransitionComplete) {\n                onTransitionComplete();\n              }\n              const {state, pending} = result;\n              stateID = state.id;\n              cancelPendingIfExistent();\n              if (pending) {\n                pendingCallback = () => {\n                  cancelPending = runInFrame(1, () => run(pending));\n                };\n              }\n              setTransitionState(pickTransitionState(state));\n            };\n            return run;\n          },\n        };\n      }),\n    withHandlers<PropsUnion, PropsOut>({\n      onTransitionBegin: ({dispatch}) => () => dispatch(ActionID.TransitionStart),\n      onTransitionComplete: ({dispatch}) => () => dispatch(ActionID.TransitionComplete),\n      timeout: ({dispatch}) => () => dispatch(ActionID.Timeout),\n    }),\n    onDidMount<PropsUnion>(\n      ({dispatch}) => {\n        dispatch(ActionID.Mount);\n      }),\n    onWillReceiveProps<PropsUnion>(\n      ({active: prevActive}, {active: nextActive, dispatch}) => {\n        if (prevActive === nextActive) { return; }\n        dispatch(ActionID.TransitionTrigger);\n      }),\n    onDidUpdate<PropsUnion>(\n      ({runPending}) => {\n        runPending();\n      }),\n    onWillUnmount<PropsUnion>(\n      ({cancelPendingIfExistent}) => {\n        cancelPendingIfExistent();\n      }),\n    integrate<keyof PropsUnion>(\n      \"timeout\", \"transitionState\", \"onTransitionBegin\", \"onTransitionComplete\",\n    ),\n  ),\n);\n"],"mappings":"AACA,SACEA,OAAO,EAAEC,SAAS,EAAEC,YAAY,EAAEC,SAAS,EAC3CC,UAAU,EAAEC,aAAa,EAAEC,kBAAkB,EAC7CC,OAAO,EAAEC,SAAS,EAAgBC,WAAW,QACxC,YAAY;AAGnB,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,IAAI,MAAM,eAAe;AAChC,SAASC,QAAQ,EAAEC,OAAO,EAAWC,cAAc,QAAwB,YAAY;AA2BvF,IAAMC,mBAAmB,GAAG,SAAAA,CAACC,KAAU;EAAK,OAAAL,IAAI,CAACK,KAAK,EAAE,OAAO,EAAE,WAAW,EAAE,cAAc,EAAE,IAAI,CAAC;AAAvD,CAAuD;AAEnG,OAAO,IAAMC,mBAAmB,GAAG,SAAAA,CAACC,MAAe;EAAK,OAAAlB,OAAO,CAC7DO,OAAO,CACLJ,SAAS,CACP,UAACgB,KAAK;IAAK,OAAC;MAAEC,WAAW,EAAET,IAAI,CAAAU,KAAA,UAACF,KAAK,EAAAG,MAAA,CAAKR,cAAc;IAAC,CAAE;EAAhD,CAAiD,CAC7D,EACDb,SAAS,CACP,iBAAiB,EAAE,oBAAoB,EACvC,UAACsB,EAAa;QAAZH,WAAA,GAAAG,EAAA,CAAAH,WAAW;IACX,OAAAL,mBAAmB,CACjBG,MAAM,CAACL,OAAO,CAACW,UAAU,EAAE;MAAEC,IAAI,EAAEb,QAAQ,CAACc,GAAG;MAAEP,KAAK,EAAEC;IAAW,CAAE,CAAC,CAACJ,KAAK,CAC7E;EAFD,CAEC,CACJ,EACDd,YAAY,CACV,UAACyB,YAAY;IACX,IAAIC,OAAO,GAAGV,MAAM,CAACL,OAAO,CAACW,UAAU,EAAE;MAAEC,IAAI,EAAEb,QAAQ,CAACc,GAAG;MAAEP,KAAK,EAAEQ;IAAY,CAAE,CAAC,CAACX,KAAK,CAACa,EAAE;IAC9F,IAAIC,aAAa,GAAe,IAAI;IACpC,IAAIC,eAA2B;IAC/B,IAAMC,uBAAuB,GAAG,SAAAA,CAAA;MAC9B,IAAIF,aAAa,EAAE;QACjBA,aAAa,EAAE;QACfA,aAAa,GAAG,IAAI;MACtB;IACF,CAAC;IACD,OAAO;MACLE,uBAAuB,EAAE,SAAAA,CAAA;QAAM,OAAAA,uBAAuB;MAAvB,CAAuB;MACtDC,UAAU,EAAE,SAAAA,CAAA;QAAM;UAChB,IAAMC,QAAQ,GAAGH,eAAe;UAChCA,eAAe,GAAG,IAAI;UACtB,IAAIG,QAAQ,EAAE;YACZA,QAAQ,EAAE;UACZ;QACF,CAAC;MANiB,CAMjB;MACDC,QAAQ,EAAE,SAAAA,CAACZ,EAAuD;YAAtDH,WAAA,GAAAG,EAAA,CAAAH,WAAW;UAAEgB,oBAAA,GAAAb,EAAA,CAAAa,oBAAoB;UAAEC,kBAAA,GAAAd,EAAA,CAAAc,kBAAkB;QAC/D,IAAMC,GAAG,GAAG,SAAAA,CAACC,QAAkB;UAC7B,IAAMC,MAAM,GAAGtB,MAAM,CAACU,OAAO,EAAE;YAAEH,IAAI,EAAEc,QAAQ;YAAEpB,KAAK,EAAEC;UAAW,CAAE,CAAC;UACtE,IAAI,CAACoB,MAAM,EAAE;YAAE;UAAQ;UACvB,IAAIA,MAAM,CAACC,SAAS,IAAIL,oBAAoB,EAAE;YAC5CA,oBAAoB,EAAE;UACxB;UACO,IAAApB,KAAA,GAAAwB,MAAA,CAAAxB,KAAK;YAAE0B,OAAA,GAAAF,MAAA,CAAAE,OAAO;UACrBd,OAAO,GAAGZ,KAAK,CAACa,EAAE;UAClBG,uBAAuB,EAAE;UACzB,IAAIU,OAAO,EAAE;YACXX,eAAe,GAAG,SAAAA,CAAA;cAChBD,aAAa,GAAGpB,UAAU,CAAC,CAAC,EAAE;gBAAM,OAAA4B,GAAG,CAACI,OAAO,CAAC;cAAZ,CAAY,CAAC;YACnD,CAAC;UACH;UACAL,kBAAkB,CAACtB,mBAAmB,CAACC,KAAK,CAAC,CAAC;QAChD,CAAC;QACD,OAAOsB,GAAG;MACZ;KACD;EACH,CAAC,CAAC,EACJpC,YAAY,CAAuB;IACjCyC,iBAAiB,EAAE,SAAAA,CAACpB,EAAU;UAATY,QAAA,GAAAZ,EAAA,CAAAY,QAAQ;MAAM;QAAM,OAAAA,QAAQ,CAACvB,QAAQ,CAACgC,eAAe,CAAC;MAAlC,CAAkC;IAAxC,CAAwC;IAC3ER,oBAAoB,EAAE,SAAAA,CAACb,EAAU;UAATY,QAAA,GAAAZ,EAAA,CAAAY,QAAQ;MAAM;QAAM,OAAAA,QAAQ,CAACvB,QAAQ,CAACiC,kBAAkB,CAAC;MAArC,CAAqC;IAA3C,CAA2C;IACjFC,OAAO,EAAE,SAAAA,CAACvB,EAAU;UAATY,QAAA,GAAAZ,EAAA,CAAAY,QAAQ;MAAM;QAAM,OAAAA,QAAQ,CAACvB,QAAQ,CAACmC,OAAO,CAAC;MAA1B,CAA0B;IAAhC;GAC1B,CAAC,EACF3C,UAAU,CACR,UAACmB,EAAU;QAATY,QAAA,GAAAZ,EAAA,CAAAY,QAAQ;IACRA,QAAQ,CAACvB,QAAQ,CAACoC,KAAK,CAAC;EAC1B,CAAC,CAAC,EACJ1C,kBAAkB,CAChB,UAACiB,EAAoB,EAAE0B,EAA8B;QAAnDC,UAAA,GAAA3B,EAAA,CAAA4B,MAAkB;QAAIC,UAAA,GAAAH,EAAA,CAAAE,MAAkB;MAAEhB,QAAA,GAAAc,EAAA,CAAAd,QAAQ;IAClD,IAAIe,UAAU,KAAKE,UAAU,EAAE;MAAE;IAAQ;IACzCjB,QAAQ,CAACvB,QAAQ,CAACyC,iBAAiB,CAAC;EACtC,CAAC,CAAC,EACJ5C,WAAW,CACT,UAACc,EAAY;QAAXU,UAAA,GAAAV,EAAA,CAAAU,UAAU;IACVA,UAAU,EAAE;EACd,CAAC,CAAC,EACJ5B,aAAa,CACX,UAACkB,EAAyB;QAAxBS,uBAAA,GAAAT,EAAA,CAAAS,uBAAuB;IACvBA,uBAAuB,EAAE;EAC3B,CAAC,CAAC,EACJxB,SAAS,CACP,SAAS,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,sBAAsB,CAC1E,CACF,CACF;AA/EuD,CA+EvD"},"metadata":{},"sourceType":"module","externalDependencies":[]}