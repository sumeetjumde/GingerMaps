{"ast":null,"code":"import parseDuration from \"./parseDuration\";\nexport function parseTransition(transition) {\n  var lastProperty = null;\n  var firstProperty = null;\n  var lastPropertyTotalDuration = -1;\n  var firstPropertyDelay = 99999999;\n  transition.split(/\\s*,\\s*(?![^\\(]*\\))/g).forEach(function (entry) {\n    var parts = entry.split(/\\s+(?![^\\(]*\\))/g);\n    var property = parts.filter(function (p) {\n      return p.match(/^[a-z\\-A-Z]+$/);\n    })[0];\n    var _a = parts.filter(function (p) {\n        return p.match(/^[0-9]+m?s$/);\n      }).map(function (p) {\n        return parseDuration(p);\n      }),\n      _b = _a[0],\n      duration = _b === void 0 ? 0 : _b,\n      _c = _a[1],\n      delay = _c === void 0 ? 0 : _c;\n    var totalDuration = duration + delay;\n    if (totalDuration > lastPropertyTotalDuration) {\n      lastPropertyTotalDuration = totalDuration;\n      lastProperty = {\n        property: property,\n        duration: duration,\n        delay: delay\n      };\n    }\n    if (delay < firstPropertyDelay) {\n      firstPropertyDelay = delay;\n      firstProperty = {\n        property: property,\n        duration: duration,\n        delay: delay\n      };\n    }\n  });\n  return [firstProperty, lastProperty];\n}\nexport default parseTransition;","map":{"version":3,"names":["parseDuration","parseTransition","transition","lastProperty","firstProperty","lastPropertyTotalDuration","firstPropertyDelay","split","forEach","entry","parts","property","filter","p","match","_a","map","_b","duration","_c","delay","totalDuration"],"sources":["/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/node_modules/react-css-transition/lib/utils/utils/parseTransition.ts"],"sourcesContent":["import parseDuration from \"./parseDuration\";\n\nexport type TransitionEntry = {\n  property: string;\n  duration: number;\n  delay: number;\n};\n\nexport function parseTransition(transition: string): [TransitionEntry, TransitionEntry] {\n  let lastProperty: TransitionEntry = null;\n  let firstProperty: TransitionEntry = null;\n  let lastPropertyTotalDuration = -1;\n  let firstPropertyDelay = 99999999;\n  transition.split(/\\s*,\\s*(?![^\\(]*\\))/g).forEach(\n    (entry) => {\n      const parts = entry.split(/\\s+(?![^\\(]*\\))/g);\n      const property = parts.filter((p) => p.match(/^[a-z\\-A-Z]+$/))[0];\n      const [duration = 0, delay = 0] = parts.filter((p) => p.match(/^[0-9]+m?s$/)).map((p) => parseDuration(p));\n      const totalDuration = duration + delay;\n      if (totalDuration > lastPropertyTotalDuration) {\n        lastPropertyTotalDuration = totalDuration;\n        lastProperty = { property, duration, delay };\n      }\n      if (delay < firstPropertyDelay) {\n        firstPropertyDelay = delay;\n        firstProperty = { property, duration, delay };\n      }\n    },\n  );\n  return [firstProperty, lastProperty];\n}\n\nexport default parseTransition;\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,iBAAiB;AAQ3C,OAAM,SAAAC,gBAA0BC,UAAkB;EAChD,IAAIC,YAAY,GAAoB,IAAI;EACxC,IAAIC,aAAa,GAAoB,IAAI;EACzC,IAAIC,yBAAyB,GAAG,CAAC,CAAC;EAClC,IAAIC,kBAAkB,GAAG,QAAQ;EACjCJ,UAAU,CAACK,KAAK,CAAC,sBAAsB,CAAC,CAACC,OAAO,CAC9C,UAACC,KAAK;IACJ,IAAMC,KAAK,GAAGD,KAAK,CAACF,KAAK,CAAC,kBAAkB,CAAC;IAC7C,IAAMI,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC,UAACC,CAAC;MAAK,OAAAA,CAAC,CAACC,KAAK,CAAC,eAAe,CAAC;IAAxB,CAAwB,CAAC,CAAC,CAAC,CAAC;IAC3D,IAAAC,EAAA,GAAAL,KAAA,CAAAE,MAAA,WAAAC,CAAA;QAAA,OAAAA,CAAA,CAAAC,KAAA;MAAA,GAAAE,GAAA,WAAAH,CAAA;QAAA,OAAAb,aAAA,CAAAa,CAAA;MAAA,EAAoG;MAAnGI,EAAA,GAAAF,EAAA,GAAY;MAAZG,QAAA,GAAAD,EAAA,kBAAAA,EAAY;MAAEE,EAAA,GAAAJ,EAAA,GAAS;MAATK,KAAA,GAAAD,EAAA,kBAAAA,EAAS;IAC9B,IAAME,aAAa,GAAGH,QAAQ,GAAGE,KAAK;IACtC,IAAIC,aAAa,GAAGhB,yBAAyB,EAAE;MAC7CA,yBAAyB,GAAGgB,aAAa;MACzClB,YAAY,GAAG;QAAEQ,QAAQ,EAAAA,QAAA;QAAEO,QAAQ,EAAAA,QAAA;QAAEE,KAAK,EAAAA;MAAA,CAAE;IAC9C;IACA,IAAIA,KAAK,GAAGd,kBAAkB,EAAE;MAC9BA,kBAAkB,GAAGc,KAAK;MAC1BhB,aAAa,GAAG;QAAEO,QAAQ,EAAAA,QAAA;QAAEO,QAAQ,EAAAA,QAAA;QAAEE,KAAK,EAAAA;MAAA,CAAE;IAC/C;EACF,CAAC,CACF;EACD,OAAO,CAAChB,aAAa,EAAED,YAAY,CAAC;AACtC;AAEA,eAAeF,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}