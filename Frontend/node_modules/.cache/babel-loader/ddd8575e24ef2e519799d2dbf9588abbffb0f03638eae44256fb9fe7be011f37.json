{"ast":null,"code":"export function memoize(cb, hasher) {\n  var cache = {};\n  var ret = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    var hash = hasher.apply(void 0, args);\n    if (hash in cache) {\n      return cache[hash];\n    }\n    var result = cb.apply(void 0, args);\n    cache[hash] = result;\n    return result;\n  };\n  return ret;\n}\nexport default memoize;","map":{"version":3,"names":["memoize","cb","hasher","cache","ret","args","_i","arguments","length","hash","apply","result"],"sources":["/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/node_modules/react-css-transition/lib/utils/utils/memoize.ts"],"sourcesContent":["export function memoize<T>(cb: T, hasher: (...args: any[]) => string): T {\n  const cache: any = {};\n  const ret: any = (...args: any[]) => {\n    const hash = hasher(...args);\n    if (hash in cache) {\n      return cache[hash];\n    }\n    const result = (cb as any)(...args);\n    cache[hash] = result;\n    return result;\n  };\n  return ret;\n}\n\nexport default memoize;\n"],"mappings":"AAAA,OAAM,SAAAA,QAAqBC,EAAK,EAAEC,MAAkC;EAClE,IAAMC,KAAK,GAAQ,EAAE;EACrB,IAAMC,GAAG,GAAQ,SAAAA,CAAA;IAAC,IAAAC,IAAA;SAAA,IAAAC,EAAA,IAAc,EAAdA,EAAA,GAAAC,SAAA,CAAAC,MAAc,EAAdF,EAAA,EAAc;MAAdD,IAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;IAChB,IAAMG,IAAI,GAAGP,MAAM,CAAAQ,KAAA,SAAIL,IAAI,CAAC;IAC5B,IAAII,IAAI,IAAIN,KAAK,EAAE;MACjB,OAAOA,KAAK,CAACM,IAAI,CAAC;IACpB;IACA,IAAME,MAAM,GAAIV,EAAU,CAAAS,KAAA,SAAIL,IAAI,CAAC;IACnCF,KAAK,CAACM,IAAI,CAAC,GAAGE,MAAM;IACpB,OAAOA,MAAM;EACf,CAAC;EACD,OAAOP,GAAG;AACZ;AAEA,eAAeJ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}