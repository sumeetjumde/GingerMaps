{"ast":null,"code":"var _jsxFileName = \"/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/src/shared/Components/FormElements/Input.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useState } from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./Input.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputreducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: true\n      };\n    default:\n      return state;\n  }\n};\nconst Inputs = props => {\n  _s();\n  const [inputstate, dispatch] = useReducer(inputreducer, {\n    valid: \"\",\n    isValid: false\n  });\n  const changehandler = event => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value\n    });\n  };\n  const inputfield = props.inputfieldtype === \"input\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changehandler,\n    value: inputstate.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changehandler,\n    value: inputstate.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `form-control ${!inputstate.isValid && 'form-control--invalid'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), inputfield, !inputstate.isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Inputs, \"JkwvPHd28FnESIuMUTuFi76YkGA=\");\n_c = Inputs;\nexport default Inputs;\nvar _c;\n$RefreshReg$(_c, \"Inputs\");","map":{"version":3,"names":["React","useReducer","useState","Input","TextField","jsxDEV","_jsxDEV","inputreducer","state","action","type","value","val","isValid","Inputs","props","_s","inputstate","dispatch","valid","changehandler","event","target","inputfield","inputfieldtype","id","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","rows","className","children","htmlFor","label","errorText","_c","$RefreshReg$"],"sources":["/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/src/shared/Components/FormElements/Input.js"],"sourcesContent":["import React, { useReducer, useState } from \"react\";\n\nimport Input from \"@material-ui/core/Input\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./Input.css\";\n\nconst inputreducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Inputs = (props) => {\n  const [inputstate, dispatch] = useReducer(inputreducer, {\n    valid: \"\",\n    isValid: false,\n  });\n\n  const changehandler = (event) => {\n    dispatch({ type: \"CHANGE\", val: event.target.value });\n  };\n  const inputfield =\n    props.inputfieldtype === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changehandler}\n        value={inputstate.value}\n      />\n    ) : (\n      <textarea id={props.id} rows={props.rows || 3} onChange={changehandler} value={inputstate.value}/>\n    );\n\n  return (\n    <div className={`form-control ${!inputstate.isValid && 'form-control--invalid'}`}>\n      <label htmlFor={props.id}>{props.label}</label>\n      {inputfield}\n      {!inputstate.isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Inputs;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAEnD,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACtC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,QAAQ;MACX,OAAO;QACL,GAAGF,KAAK;QACRG,KAAK,EAAEF,MAAM,CAACG,GAAG;QACjBC,OAAO,EAAE;MACX,CAAC;IACH;MACE,OAAOL,KAAK;EAChB;AACF,CAAC;AAED,MAAMM,MAAM,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGjB,UAAU,CAACM,YAAY,EAAE;IACtDY,KAAK,EAAE,EAAE;IACTN,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAMO,aAAa,GAAIC,KAAK,IAAK;IAC/BH,QAAQ,CAAC;MAAER,IAAI,EAAE,QAAQ;MAAEE,GAAG,EAAES,KAAK,CAACC,MAAM,CAACX;IAAM,CAAC,CAAC;EACvD,CAAC;EACD,MAAMY,UAAU,GACdR,KAAK,CAACS,cAAc,KAAK,OAAO,gBAC9BlB,OAAA;IACEmB,EAAE,EAAEV,KAAK,CAACU,EAAG;IACbf,IAAI,EAAEK,KAAK,CAACL,IAAK;IACjBgB,WAAW,EAAEX,KAAK,CAACW,WAAY;IAC/BC,QAAQ,EAAEP,aAAc;IACxBT,KAAK,EAAEM,UAAU,CAACN;EAAM;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC,gBAEFzB,OAAA;IAAUmB,EAAE,EAAEV,KAAK,CAACU,EAAG;IAACO,IAAI,EAAEjB,KAAK,CAACiB,IAAI,IAAI,CAAE;IAACL,QAAQ,EAAEP,aAAc;IAACT,KAAK,EAAEM,UAAU,CAACN;EAAM;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAClG;EAEH,oBACEzB,OAAA;IAAK2B,SAAS,EAAG,gBAAe,CAAChB,UAAU,CAACJ,OAAO,IAAI,uBAAwB,EAAE;IAAAqB,QAAA,gBAC/E5B,OAAA;MAAO6B,OAAO,EAAEpB,KAAK,CAACU,EAAG;MAAAS,QAAA,EAAEnB,KAAK,CAACqB;IAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC9CR,UAAU,EACV,CAACN,UAAU,CAACJ,OAAO,iBAAIP,OAAA;MAAA4B,QAAA,EAAInB,KAAK,CAACsB;IAAS;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAACf,EAAA,CA7BIF,MAAM;AAAAwB,EAAA,GAANxB,MAAM;AA+BZ,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}