{"ast":null,"code":"/* tslint:disable: variable-name no-switch-case-fall-through */\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n  return t;\n};\nimport { resolveTransit } from \"./transit\";\nexport var StateID;\n(function (StateID) {\n  StateID[StateID[\"EntryPoint\"] = 0] = \"EntryPoint\";\n  StateID[StateID[\"DefaultNew\"] = 1] = \"DefaultNew\";\n  StateID[StateID[\"ActiveNew\"] = 2] = \"ActiveNew\";\n  StateID[StateID[\"AppearNew\"] = 3] = \"AppearNew\";\n  StateID[StateID[\"Default\"] = 4] = \"Default\";\n  StateID[StateID[\"Active\"] = 5] = \"Active\";\n  StateID[StateID[\"AppearInit\"] = 6] = \"AppearInit\";\n  StateID[StateID[\"AppearPrepare\"] = 7] = \"AppearPrepare\";\n  StateID[StateID[\"AppearTriggered\"] = 8] = \"AppearTriggered\";\n  StateID[StateID[\"AppearStarted\"] = 9] = \"AppearStarted\";\n  StateID[StateID[\"EnterInit\"] = 10] = \"EnterInit\";\n  StateID[StateID[\"EnterPrepare\"] = 11] = \"EnterPrepare\";\n  StateID[StateID[\"EnterTriggered\"] = 12] = \"EnterTriggered\";\n  StateID[StateID[\"EnterStarted\"] = 13] = \"EnterStarted\";\n  StateID[StateID[\"LeaveInit\"] = 14] = \"LeaveInit\";\n  StateID[StateID[\"LeavePrepare\"] = 15] = \"LeavePrepare\";\n  StateID[StateID[\"LeaveTriggered\"] = 16] = \"LeaveTriggered\";\n  StateID[StateID[\"LeaveStarted\"] = 17] = \"LeaveStarted\";\n})(StateID || (StateID = {}));\nexport var StateIDList = [StateID.ActiveNew, StateID.DefaultNew, StateID.AppearNew, StateID.Active, StateID.Default, StateID.AppearInit, StateID.AppearTriggered, StateID.AppearStarted, StateID.EnterInit, StateID.EnterTriggered, StateID.EnterStarted, StateID.LeaveInit, StateID.LeaveTriggered, StateID.LeaveStarted, StateID.AppearPrepare, StateID.EnterPrepare, StateID.LeavePrepare];\nexport var ActionID;\n(function (ActionID) {\n  ActionID[ActionID[\"New\"] = 0] = \"New\";\n  ActionID[ActionID[\"Mount\"] = 1] = \"Mount\";\n  ActionID[ActionID[\"TransitionInit\"] = 2] = \"TransitionInit\";\n  ActionID[ActionID[\"TransitionPrepare\"] = 3] = \"TransitionPrepare\";\n  ActionID[ActionID[\"TransitionTrigger\"] = 4] = \"TransitionTrigger\";\n  ActionID[ActionID[\"TransitionStart\"] = 5] = \"TransitionStart\";\n  ActionID[ActionID[\"TransitionComplete\"] = 6] = \"TransitionComplete\";\n  ActionID[ActionID[\"Timeout\"] = 7] = \"Timeout\";\n})(ActionID || (ActionID = {}));\nexport var actionPropKeys = [\"active\", \"transitionAppear\", \"transitionDelay\", \"defaultStyle\", \"activeStyle\", \"appearStyle\", \"enterStyle\", \"leaveStyle\", \"appearInitStyle\", \"enterInitStyle\", \"leaveInitStyle\", \"defaultClassName\", \"activeClassName\", \"appearClassName\", \"enterClassName\", \"leaveClassName\", \"appearInitClassName\", \"enterInitClassName\", \"leaveInitClassName\"];\nexport var transitionNames = [\"enter\", \"leave\", \"appear\"];\nexport function hasTransition(name, props) {\n  var result = props[name + \"Style\"] !== undefined || props[name + \"ClassName\"] !== undefined;\n  return !result && name === \"appear\" ? hasTransition(\"enter\", props) : result;\n}\nexport function getDelay(name, delay) {\n  if (!delay) {\n    return 0;\n  }\n  if (typeof delay === \"number\") {\n    return delay;\n  }\n  return delay[name] ? delay[name] : 0;\n}\nexport function getState(id, name, props, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  if (name === \"appear\" && !props.appearStyle && !props.appearClassName) {\n    return getState(id, \"enter\", props, params);\n  }\n  var style;\n  var className;\n  var inTransition = false;\n  if (params.mode === \"init\" || params.mode === \"prepare\") {\n    style = props[name + \"InitStyle\"];\n    className = props[name + \"InitClassName\"];\n    if (style === undefined && className === undefined) {\n      if (name === \"enter\" || name === \"appear\") {\n        style = props.defaultStyle;\n        className = props.defaultClassName;\n      } else if (name === \"leave\") {\n        style = props.activeStyle;\n        className = props.activeClassName;\n      }\n    }\n    // Setting transition before starting one fixes issues on IE & Edge...\n    if (params.mode === \"prepare\" && style !== undefined) {\n      var tmp = resolveTransit(props[name + \"Style\"], getDelay(name, props.transitionDelay));\n      if (tmp.transition) {\n        style = __assign({}, style, {\n          transition: tmp.transition\n        });\n      }\n    }\n  } else {\n    style = props[name + \"Style\"];\n    className = props[name + \"ClassName\"];\n    if ([\"enter\", \"appear\", \"leave\"].indexOf(name) >= 0) {\n      inTransition = true;\n      style = resolveTransit(style, getDelay(name, props.transitionDelay));\n    }\n  }\n  style = style || {};\n  className = className || \"\";\n  return {\n    id: id,\n    style: style,\n    className: className,\n    inTransition: inTransition\n  };\n}\nexport function stateFunc(id, name, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  return function (props) {\n    return getState(id, name, props, params);\n  };\n}\nexport var activeNewState = stateFunc(StateID.ActiveNew, \"active\");\nexport var defaultNewState = stateFunc(StateID.DefaultNew, \"default\");\nexport var appearNewState = stateFunc(StateID.AppearNew, \"appear\", {\n  mode: \"init\"\n});\nexport var activeState = stateFunc(StateID.Active, \"active\");\nexport var defaultState = stateFunc(StateID.Default, \"default\");\nexport var appearInitState = stateFunc(StateID.AppearInit, \"appear\", {\n  mode: \"init\"\n});\nexport var enterInitState = stateFunc(StateID.EnterInit, \"enter\", {\n  mode: \"init\"\n});\nexport var leaveInitState = stateFunc(StateID.LeaveInit, \"leave\", {\n  mode: \"init\"\n});\nexport var appearPrepareState = stateFunc(StateID.AppearPrepare, \"appear\", {\n  mode: \"prepare\"\n});\nexport var enterPrepareState = stateFunc(StateID.EnterPrepare, \"enter\", {\n  mode: \"prepare\"\n});\nexport var leavePrepareState = stateFunc(StateID.LeavePrepare, \"leave\", {\n  mode: \"prepare\"\n});\nexport var appearTriggeredState = stateFunc(StateID.AppearTriggered, \"appear\");\nexport var enterTriggeredState = stateFunc(StateID.EnterTriggered, \"enter\");\nexport var leaveTriggeredState = stateFunc(StateID.LeaveTriggered, \"leave\");\nexport var appearStartedState = stateFunc(StateID.AppearStarted, \"appear\");\nexport var enterStartedState = stateFunc(StateID.EnterStarted, \"enter\");\nexport var leaveStartedState = stateFunc(StateID.LeaveStarted, \"leave\");\nvar invalidTransitionError = function (stateID, actionID) {\n  return new Error(\"invalid state transition from \" + StateID[stateID] + \" with \" + ActionID[actionID]);\n};\nexport var reducer = function (stateID, action) {\n  var props = action.props;\n  var nextState;\n  switch (action.kind) {\n    case ActionID.New:\n      if (stateID !== StateID.EntryPoint) {\n        throw new Error(\"invalid entrypoint\");\n      }\n      if (props.active) {\n        if (props.transitionAppear) {\n          return {\n            state: appearNewState(props)\n          };\n        }\n        return {\n          state: activeNewState(props)\n        };\n      }\n      if (!props.transitionAppear && props.active) {\n        return {\n          state: activeNewState(props)\n        };\n      }\n      return {\n        state: defaultNewState(props)\n      };\n    case ActionID.Mount:\n      switch (stateID) {\n        case StateID.AppearNew:\n          return reducer(stateID, {\n            kind: ActionID.TransitionTrigger,\n            props: props\n          });\n        default:\n          return null;\n      }\n    case ActionID.TransitionInit:\n      switch (stateID) {\n        case StateID.DefaultNew:\n        case StateID.Default:\n          if (!hasTransition(\"enter\", props)) {\n            return {\n              state: activeState(props),\n              completed: true\n            };\n          }\n          nextState = enterInitState(props);\n          break;\n        case StateID.ActiveNew:\n        case StateID.Active:\n          if (!hasTransition(\"leave\", props)) {\n            return {\n              state: defaultState(props),\n              completed: true\n            };\n          }\n          nextState = leaveInitState(props);\n          break;\n        case StateID.AppearNew:\n          if (!hasTransition(\"appear\", props)) {\n            return {\n              state: activeState(props),\n              completed: true\n            };\n          }\n          nextState = appearInitState(props);\n          break;\n        default:\n          throw invalidTransitionError(stateID, action.kind);\n      }\n      ;\n      return {\n        state: nextState,\n        pending: ActionID.TransitionPrepare\n      };\n    case ActionID.TransitionPrepare:\n      switch (stateID) {\n        case StateID.EnterInit:\n          if (!props.active) {\n            return {\n              state: defaultState(props),\n              completed: true\n            };\n          }\n          nextState = enterPrepareState(props);\n          break;\n        case StateID.LeaveInit:\n          if (props.active) {\n            return {\n              state: activeState(props),\n              completed: true\n            };\n          }\n          nextState = leavePrepareState(props);\n          break;\n        case StateID.AppearInit:\n          if (!props.active) {\n            return {\n              state: defaultState(props),\n              completed: true\n            };\n          }\n          nextState = appearPrepareState(props);\n          break;\n        default:\n          throw invalidTransitionError(stateID, action.kind);\n      }\n      ;\n      return {\n        state: nextState,\n        pending: ActionID.TransitionTrigger\n      };\n    case ActionID.TransitionStart:\n      switch (stateID) {\n        case StateID.EnterTriggered:\n          return {\n            state: enterStartedState(props)\n          };\n        case StateID.LeaveTriggered:\n          return {\n            state: leaveStartedState(props)\n          };\n        case StateID.AppearTriggered:\n          return {\n            state: appearStartedState(props)\n          };\n        default:\n          // We don't error out, because the workaround for transitionstart\n          // could happen after transitionend.\n          return null;\n      }\n    case ActionID.TransitionComplete:\n      switch (stateID) {\n        case StateID.AppearTriggered:\n        case StateID.AppearStarted:\n        case StateID.EnterTriggered:\n        case StateID.EnterStarted:\n          return {\n            state: activeState(props),\n            completed: true\n          };\n        case StateID.LeaveTriggered:\n        case StateID.LeaveStarted:\n          return {\n            state: defaultState(props),\n            completed: true\n          };\n        default:\n          throw invalidTransitionError(stateID, action.kind);\n      }\n    case ActionID.TransitionTrigger:\n      switch (stateID) {\n        case StateID.ActiveNew:\n        case StateID.Active:\n        case StateID.DefaultNew:\n        case StateID.Default:\n        case StateID.AppearNew:\n          return reducer(stateID, {\n            kind: ActionID.TransitionInit,\n            props: props\n          });\n        case StateID.EnterInit:\n          return {\n            state: defaultState(props),\n            completed: true\n          };\n        case StateID.LeaveInit:\n          return {\n            state: activeState(props),\n            completed: true\n          };\n        case StateID.AppearInit:\n          return {\n            state: defaultState(props),\n            completed: true\n          };\n        case StateID.EnterPrepare:\n          if (props.active) {\n            return {\n              state: enterTriggeredState(props)\n            };\n          }\n          return {\n            state: defaultState(props),\n            completed: true\n          };\n        case StateID.LeavePrepare:\n          if (!props.active) {\n            return {\n              state: leaveTriggeredState(props)\n            };\n          }\n          return {\n            state: activeState(props),\n            completed: true\n          };\n        case StateID.AppearPrepare:\n          if (props.active) {\n            return {\n              state: appearTriggeredState(props)\n            };\n          }\n          return {\n            state: defaultState(props),\n            completed: true\n          };\n        case StateID.EnterTriggered:\n          return {\n            state: defaultState(props),\n            completed: true\n          };\n        case StateID.LeaveTriggered:\n          return {\n            state: activeState(props),\n            completed: true\n          };\n        case StateID.AppearTriggered:\n          return {\n            state: defaultState(props),\n            completed: true\n          };\n        case StateID.AppearStarted:\n        case StateID.EnterStarted:\n          return {\n            state: leaveStartedState(props)\n          };\n        case StateID.LeaveStarted:\n          return {\n            state: enterStartedState(props)\n          };\n        default:\n          throw invalidTransitionError(stateID, action.kind);\n      }\n    case ActionID.Timeout:\n      switch (stateID) {\n        case StateID.AppearTriggered:\n        case StateID.AppearStarted:\n        case StateID.EnterTriggered:\n        case StateID.EnterStarted:\n          return {\n            state: activeState(props),\n            completed: true\n          };\n        case StateID.LeaveTriggered:\n        case StateID.LeaveStarted:\n          return {\n            state: defaultState(props),\n            completed: true\n          };\n        default:\n          throw invalidTransitionError(stateID, action.kind);\n      }\n    default:\n  }\n  throw new Error(\"unexpected error\");\n};","map":{"version":3,"names":["resolveTransit","StateID","StateIDList","ActiveNew","DefaultNew","AppearNew","Active","Default","AppearInit","AppearTriggered","AppearStarted","EnterInit","EnterTriggered","EnterStarted","LeaveInit","LeaveTriggered","LeaveStarted","AppearPrepare","EnterPrepare","LeavePrepare","ActionID","actionPropKeys","transitionNames","hasTransition","name","props","result","undefined","getDelay","delay","getState","id","params","appearStyle","appearClassName","style","className","inTransition","mode","defaultStyle","defaultClassName","activeStyle","activeClassName","tmp","transitionDelay","transition","__assign","indexOf","stateFunc","activeNewState","defaultNewState","appearNewState","activeState","defaultState","appearInitState","enterInitState","leaveInitState","appearPrepareState","enterPrepareState","leavePrepareState","appearTriggeredState","enterTriggeredState","leaveTriggeredState","appearStartedState","enterStartedState","leaveStartedState","invalidTransitionError","stateID","actionID","Error","reducer","action","nextState","kind","New","EntryPoint","active","transitionAppear","state","Mount","TransitionTrigger","TransitionInit","completed","pending","TransitionPrepare","TransitionStart","TransitionComplete","Timeout"],"sources":["/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/node_modules/react-css-transition/lib/reducer.ts"],"sourcesContent":["/* tslint:disable: variable-name no-switch-case-fall-through */\n\nimport { CSSProperties } from \"react\";\n\nimport { CSSTransitionProps, CSSTransitionDelay } from \"./csstransition\";\nimport { resolveTransit } from \"./transit\";\n\nexport interface TransitionState {\n  id?: StateID;\n  style?: CSSProperties;\n  className?: string;\n  inTransition?: boolean;\n}\n\nexport enum StateID {\n  EntryPoint,\n  DefaultNew,\n  ActiveNew,\n  AppearNew,\n  Default,\n  Active,\n  AppearInit,\n  AppearPrepare,\n  AppearTriggered,\n  AppearStarted,\n  EnterInit,\n  EnterPrepare,\n  EnterTriggered,\n  EnterStarted,\n  LeaveInit,\n  LeavePrepare,\n  LeaveTriggered,\n  LeaveStarted,\n}\n\nexport const StateIDList = [\n  StateID.ActiveNew, StateID.DefaultNew, StateID.AppearNew,\n  StateID.Active, StateID.Default,\n  StateID.AppearInit, StateID.AppearTriggered, StateID.AppearStarted,\n  StateID.EnterInit, StateID.EnterTriggered, StateID.EnterStarted,\n  StateID.LeaveInit, StateID.LeaveTriggered, StateID.LeaveStarted,\n  StateID.AppearPrepare, StateID.EnterPrepare, StateID.LeavePrepare,\n];\n\nexport enum ActionID {\n  New,\n  Mount,\n  TransitionInit,\n  TransitionPrepare,\n  TransitionTrigger,\n  TransitionStart,\n  TransitionComplete,\n  Timeout,\n}\n\nexport type ActionPropKeys =\n  \"active\"\n  | \"transitionAppear\"\n  | \"transitionDelay\"\n  | \"defaultStyle\"\n  | \"activeStyle\"\n  | \"appearStyle\"\n  | \"enterStyle\"\n  | \"leaveStyle\"\n  | \"appearInitStyle\"\n  | \"enterInitStyle\"\n  | \"leaveInitStyle\"\n  | \"defaultClassName\"\n  | \"activeClassName\"\n  | \"appearClassName\"\n  | \"enterClassName\"\n  | \"leaveClassName\"\n  | \"appearInitClassName\"\n  | \"enterInitClassName\"\n  | \"leaveInitClassName\";\n\nexport const actionPropKeys: ActionPropKeys[] = [\n  \"active\",\n  \"transitionAppear\",\n  \"transitionDelay\",\n  \"defaultStyle\",\n  \"activeStyle\",\n  \"appearStyle\",\n  \"enterStyle\",\n  \"leaveStyle\",\n  \"appearInitStyle\",\n  \"enterInitStyle\",\n  \"leaveInitStyle\",\n  \"defaultClassName\",\n  \"activeClassName\",\n  \"appearClassName\",\n  \"enterClassName\",\n  \"leaveClassName\",\n  \"appearInitClassName\",\n  \"enterInitClassName\",\n  \"leaveInitClassName\",\n];\n\nexport type ActionProps = {[P in ActionPropKeys]?: CSSTransitionProps[P]};\n\nexport type Action = {\n  kind: ActionID;\n  props: ActionProps;\n};\n\nexport const transitionNames = [\"enter\", \"leave\", \"appear\"];\n\nexport function hasTransition(name: string, props: any): boolean {\n  const result = props[name + \"Style\"] !== undefined || props[name + \"ClassName\"] !== undefined;\n  return !result && name === \"appear\"\n    ? hasTransition(\"enter\", props)\n    : result;\n}\n\nexport function getDelay(name: string, delay: CSSTransitionDelay): number {\n  if (!delay) { return 0; }\n  if (typeof delay === \"number\") {\n    return delay as number;\n  }\n  return (delay as any)[name] ? (delay as any)[name] : 0;\n}\n\nexport type GetStateParams = { mode?: \"init\" | \"prepare\" };\n\nexport function getState(id: StateID, name: string, props: any, params: GetStateParams = {}): TransitionState {\n  if (name === \"appear\" && !props.appearStyle && !props.appearClassName) {\n    return getState(id, \"enter\", props, params);\n  }\n  let style: any;\n  let className: string;\n  let inTransition = false;\n  if (params.mode === \"init\" || params.mode === \"prepare\") {\n    style = props[name + \"InitStyle\"];\n    className = props[name + \"InitClassName\"];\n    if (style === undefined && className === undefined) {\n      if (name === \"enter\" || name === \"appear\") {\n        style = props.defaultStyle;\n        className = props.defaultClassName;\n      } else if (name === \"leave\") {\n        style = props.activeStyle;\n        className = props.activeClassName;\n      }\n    }\n    // Setting transition before starting one fixes issues on IE & Edge...\n    if (params.mode === \"prepare\" && style !== undefined) {\n      const tmp = resolveTransit(props[name + \"Style\"], getDelay(name, props.transitionDelay));\n      if (tmp.transition) {\n        style = { ...style, transition: tmp.transition };\n      }\n    }\n  } else {\n    style = props[name + \"Style\"];\n    className = props[name + \"ClassName\"];\n    if ([\"enter\", \"appear\", \"leave\"].indexOf(name) >= 0) {\n      inTransition = true;\n      style = resolveTransit(style, getDelay(name, props.transitionDelay));\n    }\n  }\n\n  style = style || {};\n  className = className || \"\";\n\n  return {\n    id,\n    style,\n    className,\n    inTransition,\n  };\n}\n\nexport function stateFunc(id: StateID, name: string, params: GetStateParams = {}) {\n  return (props: Action[\"props\"]) => getState(id, name, props, params);\n}\n\nexport const activeNewState = stateFunc(StateID.ActiveNew, \"active\");\nexport const defaultNewState = stateFunc(StateID.DefaultNew, \"default\");\nexport const appearNewState = stateFunc(StateID.AppearNew, \"appear\", { mode: \"init\" });\nexport const activeState = stateFunc(StateID.Active, \"active\");\nexport const defaultState = stateFunc(StateID.Default, \"default\");\nexport const appearInitState = stateFunc(StateID.AppearInit, \"appear\", { mode: \"init\" });\nexport const enterInitState = stateFunc(StateID.EnterInit, \"enter\", { mode: \"init\" });\nexport const leaveInitState = stateFunc(StateID.LeaveInit, \"leave\", { mode: \"init\" });\nexport const appearPrepareState = stateFunc(StateID.AppearPrepare, \"appear\", { mode: \"prepare\" });\nexport const enterPrepareState = stateFunc(StateID.EnterPrepare, \"enter\", { mode: \"prepare\" });\nexport const leavePrepareState = stateFunc(StateID.LeavePrepare, \"leave\", { mode: \"prepare\" });\nexport const appearTriggeredState = stateFunc(StateID.AppearTriggered, \"appear\");\nexport const enterTriggeredState = stateFunc(StateID.EnterTriggered, \"enter\");\nexport const leaveTriggeredState = stateFunc(StateID.LeaveTriggered, \"leave\");\nexport const appearStartedState = stateFunc(StateID.AppearStarted, \"appear\");\nexport const enterStartedState = stateFunc(StateID.EnterStarted, \"enter\");\nexport const leaveStartedState = stateFunc(StateID.LeaveStarted, \"leave\");\n\nconst invalidTransitionError = (stateID: StateID, actionID: ActionID) => {\n  return new Error(`invalid state transition from ${StateID[stateID]} with ${ActionID[actionID]}`);\n};\n\nexport type Reducer = (stateID: StateID, action: Action) =>\n  { state: TransitionState, pending?: ActionID, completed?: boolean };\n\nexport const reducer: Reducer = (stateID, action) => {\n  const props = action.props;\n  let nextState: TransitionState;\n\n  switch (action.kind) {\n    case ActionID.New:\n      if (stateID !== StateID.EntryPoint) { throw new Error(\"invalid entrypoint\"); }\n      if (props.active) {\n        if (props.transitionAppear) { return { state: appearNewState(props) }; }\n        return { state: activeNewState(props) };\n      }\n      if (!props.transitionAppear && props.active) { return { state: activeNewState(props) }; }\n      return { state: defaultNewState(props) };\n    case ActionID.Mount:\n      switch (stateID) {\n        case StateID.AppearNew:\n          return reducer(stateID, { kind: ActionID.TransitionTrigger, props });\n        default:\n          return null;\n      }\n    case ActionID.TransitionInit:\n      switch (stateID) {\n        case StateID.DefaultNew:\n        case StateID.Default:\n          if (!hasTransition(\"enter\", props)) {\n            return { state: activeState(props), completed: true };\n          }\n          nextState = enterInitState(props);\n          break;\n        case StateID.ActiveNew:\n        case StateID.Active:\n          if (!hasTransition(\"leave\", props)) {\n            return { state: defaultState(props), completed: true };\n          }\n          nextState = leaveInitState(props);\n          break;\n        case StateID.AppearNew:\n          if (!hasTransition(\"appear\", props)) {\n            return { state: activeState(props), completed: true };\n          }\n          nextState = appearInitState(props);\n          break;\n        default:\n          throw invalidTransitionError(stateID, action.kind);\n      };\n      return { state: nextState, pending: ActionID.TransitionPrepare };\n    case ActionID.TransitionPrepare:\n      switch (stateID) {\n        case StateID.EnterInit:\n          if (!props.active) { return { state: defaultState(props), completed: true }; }\n          nextState = enterPrepareState(props);\n          break;\n        case StateID.LeaveInit:\n          if (props.active) { return { state: activeState(props), completed: true }; }\n          nextState = leavePrepareState(props);\n          break;\n        case StateID.AppearInit:\n          if (!props.active) { return { state: defaultState(props), completed: true }; }\n          nextState = appearPrepareState(props);\n          break;\n        default:\n          throw invalidTransitionError(stateID, action.kind);\n      };\n      return { state: nextState, pending: ActionID.TransitionTrigger };\n    case ActionID.TransitionStart:\n      switch (stateID) {\n        case StateID.EnterTriggered:\n          return { state: enterStartedState(props) };\n        case StateID.LeaveTriggered:\n          return { state: leaveStartedState(props) };\n        case StateID.AppearTriggered:\n          return { state: appearStartedState(props) };\n        default:\n          // We don't error out, because the workaround for transitionstart\n          // could happen after transitionend.\n          return null;\n      }\n    case ActionID.TransitionComplete:\n      switch (stateID) {\n        case StateID.AppearTriggered:\n        case StateID.AppearStarted:\n        case StateID.EnterTriggered:\n        case StateID.EnterStarted:\n          return { state: activeState(props), completed: true };\n        case StateID.LeaveTriggered:\n        case StateID.LeaveStarted:\n          return { state: defaultState(props), completed: true };\n        default:\n          throw invalidTransitionError(stateID, action.kind);\n      }\n    case ActionID.TransitionTrigger:\n      switch (stateID) {\n        case StateID.ActiveNew:\n        case StateID.Active:\n        case StateID.DefaultNew:\n        case StateID.Default:\n        case StateID.AppearNew:\n          return reducer(stateID, { kind: ActionID.TransitionInit, props });\n        case StateID.EnterInit:\n          return { state: defaultState(props), completed: true };\n        case StateID.LeaveInit:\n          return { state: activeState(props), completed: true };\n        case StateID.AppearInit:\n          return { state: defaultState(props), completed: true };\n        case StateID.EnterPrepare:\n          if (props.active) { return { state: enterTriggeredState(props) }; }\n          return { state: defaultState(props), completed: true };\n        case StateID.LeavePrepare:\n          if (!props.active) { return { state: leaveTriggeredState(props) }; }\n          return { state: activeState(props), completed: true };\n        case StateID.AppearPrepare:\n          if (props.active) { return { state: appearTriggeredState(props) }; }\n          return { state: defaultState(props), completed: true };\n        case StateID.EnterTriggered:\n          return { state: defaultState(props), completed: true };\n        case StateID.LeaveTriggered:\n          return { state: activeState(props), completed: true };\n        case StateID.AppearTriggered:\n          return { state: defaultState(props), completed: true };\n        case StateID.AppearStarted:\n        case StateID.EnterStarted:\n          return { state: leaveStartedState(props) };\n        case StateID.LeaveStarted:\n          return { state: enterStartedState(props) };\n        default:\n          throw invalidTransitionError(stateID, action.kind);\n      }\n    case ActionID.Timeout:\n      switch (stateID) {\n        case StateID.AppearTriggered:\n        case StateID.AppearStarted:\n        case StateID.EnterTriggered:\n        case StateID.EnterStarted:\n          return { state: activeState(props), completed: true };\n        case StateID.LeaveTriggered:\n        case StateID.LeaveStarted:\n          return { state: defaultState(props), completed: true };\n        default:\n          throw invalidTransitionError(stateID, action.kind);\n      }\n    default:\n  }\n  throw new Error(\"unexpected error\");\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}