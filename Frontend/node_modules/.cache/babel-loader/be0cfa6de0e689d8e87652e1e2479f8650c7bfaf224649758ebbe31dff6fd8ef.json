{"ast":null,"code":"var _jsxFileName = \"/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/src/user/Pages/Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport Inputs from \"../../shared/Components/FormElements/Input\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const auth = useContext(AuthContext);\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: \"\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    },\n    name: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n  const placeUpdateSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n    // if(isloggedin){\n\n    // }\n    // else{\n    //   try{\n    //     const response = await fetch('http://localhost:4000/api/users/signup',{\n    //       method:'POST',\n    //       headers:{\n    //         'Content-Type':'application/json'\n    //       },\n    //       body:JSON.stringify({\n    //         name:formState.inputs.name.value,\n    //         email:formState.inputs.name.value,\n    //         password:formState.inputs.name.value\n    //       })\n    //     });\n\n    //     const responseData = await response.json();\n    //     console.log(responseData);\n    //   }\n    //   catch(err){\n    //     console.log(err);\n    //   }\n\n    // }    \n    auth.login();\n  };\n  const [isloggedin, setisloggedin] = useState(true);\n  const switchLoggedInModeHandler = () => {\n    if (!isloggedin) {\n      setFormData({\n        ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({\n        ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    }\n    setisloggedin(prevMode => !prevMode);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"place-form\",\n      onSubmit: placeUpdateSubmitHandler,\n      children: [!isloggedin && /*#__PURE__*/_jsxDEV(Inputs, {\n        id: \"name\",\n        inputfieldtype: \"input\",\n        type: \"text\",\n        label: \"Name\",\n        errorText: \"Please enter a valid Name\",\n        onInput: inputHandler,\n        value: formState.inputs.name.value,\n        valid: formState.inputs.name.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !formState.isValid,\n        children: isloggedin ? \"Login\" : \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: switchLoggedInModeHandler,\n        children: isloggedin ? \"Switch to Register\" : \"Switch to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"0h+htDxZN5U8I1bFbLXAappN23o=\", false, function () {\n  return [useForm];\n});\n_c = Auth;\nexport default Auth;\n\n////prev\n// {isloggedin ? (\n//   <>\n//     <h2>Login</h2>\n//     <Inputs\n//       id=\"email\"\n//       inputfieldtype=\"input\"\n//       type=\"email\"\n//       label=\"E-mail\"\n//       errorText=\"Please enter a valid Email\"\n//       onInput={inputHandler}\n//       value={formState.inputs.email.value}\n//       valid={formState.inputs.email.isValid}\n//     />\n//     <Inputs\n//       id=\"password\"\n//       inputfieldtype=\"input\"\n//       type=\"password\"\n//       label=\"Password\"\n//       errorText=\"Please enter a password\"\n//       onInput={inputHandler}\n//       value={formState.inputs.password.value}\n//       valid={formState.inputs.password.isValid}\n//     />\n//   </>\n// ) : (\n//   <>\n//     <h2>Registration</h2>\n//     <Inputs\n//       id=\"name\"\n//       inputfieldtype=\"input\"\n//       type=\"text\"\n//       label=\"Name\"\n//       errorText=\"Please enter a valid Name\"\n//       onInput={inputHandler}\n//       value={formState.inputs.name.value}\n//       valid={formState.inputs.name.isValid}\n//     />\n//     <Inputs\n//       id=\"email\"\n//       inputfieldtype=\"input\"\n//       type=\"email\"\n//       label=\"E-mail\"\n//       errorText=\"Please enter a valid Email\"\n//       onInput={inputHandler}\n//       validator={[VALIDATOR_EMAIL()]}\n//       value={formState.inputs.email.value}\n//       valid={formState.inputs.email.isValid}\n//     />\n//     <Inputs\n//       id=\"password\"\n//       inputfieldtype=\"input\"\n//       type=\"password\"\n//       label=\"Password\"\n//       errorText=\"Please enter a password at least 5 characters\"\n//       onInput={inputHandler}\n//       validator={[VALIDATOR_MINLENGTH(5)]}\n//       value={formState.inputs.password.value}\n//       valid={formState.inputs.password.isValid}\n//     />\n//   </>\n// )}\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useContext","useState","useForm","Inputs","AuthContext","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","jsxDEV","_jsxDEV","Auth","_s","auth","formState","inputHandler","setFormData","email","value","isValid","password","name","placeUpdateSubmitHandler","event","preventDefault","console","log","inputs","login","isloggedin","setisloggedin","switchLoggedInModeHandler","undefined","prevMode","Fragment","children","className","onSubmit","id","inputfieldtype","type","label","errorText","onInput","valid","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/src/user/Pages/Auth.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport Inputs from \"../../shared/Components/FormElements/Input\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport {VALIDATOR_EMAIL,VALIDATOR_MINLENGTH} from \"../../shared/util/validators\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n      name: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const placeUpdateSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n    // if(isloggedin){\n\n    // }\n    // else{\n    //   try{\n    //     const response = await fetch('http://localhost:4000/api/users/signup',{\n    //       method:'POST',\n    //       headers:{\n    //         'Content-Type':'application/json'\n    //       },\n    //       body:JSON.stringify({\n    //         name:formState.inputs.name.value,\n    //         email:formState.inputs.name.value,\n    //         password:formState.inputs.name.value\n    //       })\n    //     });\n\n    //     const responseData = await response.json();\n    //     console.log(responseData);\n    //   }\n    //   catch(err){\n    //     console.log(err);\n    //   }\n      \n    // }    \n    auth.login();\n  };\n\n  const [isloggedin, setisloggedin] = useState(true);\n\n  const switchLoggedInModeHandler = () => {\n    if (!isloggedin) {\n      setFormData(\n        {\n          ...formState.inputs,  \n          name: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setisloggedin((prevMode) => !prevMode);\n  };\n\n  return (\n    <React.Fragment>\n      <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n        {!isloggedin && (\n          <Inputs\n            id=\"name\"\n            inputfieldtype=\"input\"\n            type=\"text\"\n            label=\"Name\"\n            errorText=\"Please enter a valid Name\"\n            onInput={inputHandler}\n            value={formState.inputs.name.value}\n            valid={formState.inputs.name.isValid}\n          \n          />\n        )}\n\n        <button type=\"submit\" disabled={!formState.isValid}>{isloggedin ? \"Login\" : \"Register\"}</button>\n        <button onClick={switchLoggedInModeHandler}>\n          {isloggedin ? \"Switch to Register\" : \"Switch to Login\"}\n        </button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n\n\n\n\n////prev\n// {isloggedin ? (\n//   <>\n//     <h2>Login</h2>\n//     <Inputs\n//       id=\"email\"\n//       inputfieldtype=\"input\"\n//       type=\"email\"\n//       label=\"E-mail\"\n//       errorText=\"Please enter a valid Email\"\n//       onInput={inputHandler}\n//       value={formState.inputs.email.value}\n//       valid={formState.inputs.email.isValid}\n//     />\n//     <Inputs\n//       id=\"password\"\n//       inputfieldtype=\"input\"\n//       type=\"password\"\n//       label=\"Password\"\n//       errorText=\"Please enter a password\"\n//       onInput={inputHandler}\n//       value={formState.inputs.password.value}\n//       valid={formState.inputs.password.isValid}\n//     />\n//   </>\n// ) : (\n//   <>\n//     <h2>Registration</h2>\n//     <Inputs\n//       id=\"name\"\n//       inputfieldtype=\"input\"\n//       type=\"text\"\n//       label=\"Name\"\n//       errorText=\"Please enter a valid Name\"\n//       onInput={inputHandler}\n//       value={formState.inputs.name.value}\n//       valid={formState.inputs.name.isValid}\n//     />\n//     <Inputs\n//       id=\"email\"\n//       inputfieldtype=\"input\"\n//       type=\"email\"\n//       label=\"E-mail\"\n//       errorText=\"Please enter a valid Email\"\n//       onInput={inputHandler}\n//       validator={[VALIDATOR_EMAIL()]}\n//       value={formState.inputs.email.value}\n//       valid={formState.inputs.email.isValid}\n//     />\n//     <Inputs\n//       id=\"password\"\n//       inputfieldtype=\"input\"\n//       type=\"password\"\n//       label=\"Password\"\n//       errorText=\"Please enter a password at least 5 characters\"\n//       onInput={inputHandler}\n//       validator={[VALIDATOR_MINLENGTH(5)]}\n//       value={formState.inputs.password.value}\n//       valid={formState.inputs.password.isValid}\n//     />\n//   </>\n// )}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}