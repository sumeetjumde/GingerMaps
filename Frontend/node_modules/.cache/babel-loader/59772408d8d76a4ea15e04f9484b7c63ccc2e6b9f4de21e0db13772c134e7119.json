{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback, useRef, useEffect } from \"react\";\nexport const useHttpClient = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const activeHttpRequests = useRef([]);\n  const sendRequest = useCallback(async (url, method = \"GET\", body = null, header = {}) => {\n    setIsLoading(true);\n    const httpAbortCtrl = new AbortController();\n    activeHttpRequests.current.push(httpAbortCtrl);\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers,\n        signal: httpAbortCtrl.signal\n      });\n      const responseData = await response.json();\n\n      // This will check all errors if error exist for 400 and 500 it will catch which is not genrally catched.\n      if (!response.ok) {\n        throw new Error(responseData.message);\n      }\n      return responseData;\n    } catch (err) {\n      setError(err.message);\n    }\n    setIsLoading(false);\n  }, []);\n  const clearError = () => {\n    setError(null);\n  };\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abortCtrl());\n    };\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  };\n};\n_s(useHttpClient, \"5LFg9Ro/5iGJ4ehzHD/qJSt5Ojo=\");","map":{"version":3,"names":["useState","useCallback","useRef","useEffect","useHttpClient","_s","isLoading","setIsLoading","error","setError","activeHttpRequests","sendRequest","url","method","body","header","httpAbortCtrl","AbortController","current","push","response","fetch","headers","signal","responseData","json","ok","Error","message","err","clearError","forEach","abortCtrl"],"sources":["/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/src/shared/hooks/http-hook.js"],"sourcesContent":["import { useState,useCallback,useRef, useEffect} from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(async (url, method = \"GET\", body = null, header = {}) => {\n    setIsLoading(true);\n    const httpAbortCtrl = new AbortController();\n    activeHttpRequests.current.push(httpAbortCtrl);\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers,\n        signal:httpAbortCtrl.signal\n      });\n\n      const responseData = await response.json();\n\n      // This will check all errors if error exist for 400 and 500 it will catch which is not genrally catched.\n      if (!response.ok) {\n        throw new Error(responseData.message);\n      }\n\n      return responseData;\n    } catch (err) {\n      setError(err.message);\n    }\n    setIsLoading(false);\n  },[]);\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(()=>{\n    return () => {\n        activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abortCtrl());\n    };\n  },[]);\n\n  return {isLoading,error,sendRequest,clearError};\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAACC,WAAW,EAACC,MAAM,EAAEC,SAAS,QAAO,OAAO;AAE7D,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAEpC,MAAMU,kBAAkB,GAAGR,MAAM,CAAC,EAAE,CAAC;EAErC,MAAMS,WAAW,GAAGV,WAAW,CAAC,OAAOW,GAAG,EAAEC,MAAM,GAAG,KAAK,EAAEC,IAAI,GAAG,IAAI,EAAEC,MAAM,GAAG,CAAC,CAAC,KAAK;IACvFR,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMS,aAAa,GAAG,IAAIC,eAAe,CAAC,CAAC;IAC3CP,kBAAkB,CAACQ,OAAO,CAACC,IAAI,CAACH,aAAa,CAAC;IAC9C,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAG,EAAE;QAChCC,MAAM;QACNC,IAAI;QACJQ,OAAO;QACPC,MAAM,EAACP,aAAa,CAACO;MACvB,CAAC,CAAC;MAEF,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;;MAE1C;MACA,IAAI,CAACL,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,YAAY,CAACI,OAAO,CAAC;MACvC;MAEA,OAAOJ,YAAY;IACrB,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZpB,QAAQ,CAACoB,GAAG,CAACD,OAAO,CAAC;IACvB;IACArB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMuB,UAAU,GAAGA,CAAA,KAAM;IACvBrB,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAEDN,SAAS,CAAC,MAAI;IACZ,OAAO,MAAM;MACTO,kBAAkB,CAACQ,OAAO,CAACa,OAAO,CAACC,SAAS,IAAIA,SAAS,CAACA,SAAS,CAAC,CAAC,CAAC;IAC1E,CAAC;EACH,CAAC,EAAC,EAAE,CAAC;EAEL,OAAO;IAAC1B,SAAS;IAACE,KAAK;IAACG,WAAW;IAACmB;EAAU,CAAC;AACjD,CAAC;AAACzB,EAAA,CA3CWD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}