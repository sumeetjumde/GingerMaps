{"ast":null,"code":"var _jsxFileName = \"/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/src/shared/Components/FormElements/ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './ImageUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUpload = props => {\n  _s();\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState();\n  const filePickerRef = useRef();\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n  const pickHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, isValid);\n  };\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-control\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: props.id,\n      ref: filePickerRef,\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      accept: \".jpg,.png,.jpeg\",\n      onChange: pickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `image-upload ${props.center && 'center'}`,\n      children: [previewUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-upload_preview\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: previewUrl,\n          alt: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 69\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 31\n      }, this), !previewUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please pick an Image.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: pickImageHandler,\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), !isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageUpload, \"pij0NNjw/E3i6Z85lNlTDH6XgYo=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","ImageUpload","props","_s","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","pickHandler","event","pickedFile","fileIsValid","target","files","length","onInput","id","pickImageHandler","current","click","className","children","ref","style","display","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","center","src","alt","onClick","errorText","_c","$RefreshReg$"],"sources":["/Users/sumeetpravinjumde/Documents/Work/Coding/Ginger/Frontend/src/shared/Components/FormElements/ImageUpload.js"],"sourcesContent":["import React , {useEffect, useRef, useState} from 'react';\n\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n    const [file,setFile] = useState();\n    const [previewUrl,setPreviewUrl] = useState();\n    const [isValid,setIsValid] = useState();\n    const filePickerRef = useRef();\n\n    useEffect(()=>{\n        if(!file){\n            return;\n        }\n        const fileReader = new FileReader();\n        fileReader.onload = () =>{\n            setPreviewUrl(fileReader.result);\n        };\n        fileReader.readAsDataURL(file);\n    },[file]);\n\n    const pickHandler = event => {\n        let pickedFile;\n        let fileIsValid = isValid;\n        if(event.target.files && event.target.files.length === 1){\n            pickedFile = event.target.files[0];\n            setFile(pickedFile);\n            setIsValid(true);\n            fileIsValid = true;\n            \n        }\n        else{\n        setIsValid(false);\n        fileIsValid = false;\n        }\n\n        props.onInput(props.id,pickedFile,isValid)\n    }\n\n    const pickImageHandler = () => {\n        filePickerRef.current.click();\n    };\n\n    return(\n        <div className='form-control'>\n            <input id={props.id} ref={filePickerRef} style={{display:'none'}} type = \"file\" accept=\".jpg,.png,.jpeg\" onChange={pickHandler}/>\n\n            <div className={`image-upload ${props.center && 'center'}`}>\n               {previewUrl && <div className='image-upload_preview'><img src={previewUrl} alt='Preview' /></div>}\n               {!previewUrl && <p>Please pick an Image.</p>} \n                <button onClick={pickImageHandler}>Upload Image</button>\n            </div>\n            {!isValid && <p>{props.errorText}</p>}\n        </div>\n    )\n};\n\nexport default ImageUpload;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}